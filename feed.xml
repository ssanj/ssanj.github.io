<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>BabylonCandle</title>
        <link>http://blog.ssanj.net</link>
        <description><![CDATA[The blog of Sanjiv Sahayam]]></description>
        <atom:link href="http://blog.ssanj.net/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Sun, 15 Mar 2015 00:00:00 UT</lastBuildDate>
        <item>
    <title>Don't Wait for Moods</title>
    <link>http://blog.ssanj.net/posts/2015-03-15-dont-wait-for-moods.html</link>
    <description><![CDATA[<p class="quote">
I don’t wait for moods. You accomplish nothing if you do that. Your mind must know it has to get down to work. <span class="attribution">Pearl S. Buck</span>
</p>
]]></description>
    <pubDate>Sun, 15 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-15-dont-wait-for-moods.html</guid>
</item>
<item>
    <title>Do your Best Work Everyday</title>
    <link>http://blog.ssanj.net/posts/2015-03-15-do-your-best-work-everyday.html</link>
    <description><![CDATA[<p>Do your best work every day. No excuses. No exceptions.</p>]]></description>
    <pubDate>Sun, 15 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-15-do-your-best-work-everyday.html</guid>
</item>
<item>
    <title>Creating an Effective Routine</title>
    <link>http://blog.ssanj.net/posts/2015-03-15-creating-an-effective-routine.html</link>
    <description><![CDATA[<p>In the last article, <a href="2015-03-14-it-takes-time-to-build-something-great.html">It Takes Time to Build Something Great</a> we thought about the idea of spending a long period of time to create something truly great.</p>
<p>So where do we find time to get all this work done? The book <a href="http://99u.com/book/manage-your-day-to-day-2">Manage your day-to-day</a> recommends routines as a way of getting into a regular rhythm of creating things. Routines train your mind to get into “creative” mode. They also help you plan your time more predictably.</p>
<p>Set up a weekly schedule of when you will work and for how long. This will ensure you always have time set aside to do your (great) work.</p>]]></description>
    <pubDate>Sun, 15 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-15-creating-an-effective-routine.html</guid>
</item>
<item>
    <title>It Takes Time to Build Something Great</title>
    <link>http://blog.ssanj.net/posts/2015-03-14-it-takes-time-to-build-something-great.html</link>
    <description><![CDATA[<p>The book <a href="http://99u.com/book/manage-your-day-to-day-2">Manage your day-to-day</a> says that:</p>
<blockquote>
<p>Truly creative achievements require hundreds, if not thousands of hours of work.</p>
</blockquote>
<p>Doing great work means spending thousands of hours on your craft. Sounds tiresome. But in reality there is no way around it. Working consistently and regularly over a long period of time leads to huge payoffs. This idea nudges us to focus on what can be achieved in the long-term over “quick” wins.</p>]]></description>
    <pubDate>Sat, 14 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-14-it-takes-time-to-build-something-great.html</guid>
</item>
<item>
    <title>You are what you Practice Everyday</title>
    <link>http://blog.ssanj.net/posts/2015-03-11-you-are-what-you-practice-everyday.html</link>
    <description><![CDATA[<p class="quote">
We are what we repeatedly do. Excellence, then, is not an act, but a habit.<span class="attribution">Artistole</span>
</p>
]]></description>
    <pubDate>Wed, 11 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-11-you-are-what-you-practice-everyday.html</guid>
</item>
<item>
    <title>Writing Code is Easy</title>
    <link>http://blog.ssanj.net/posts/2015-03-11-writing-code-is-easy.html</link>
    <description><![CDATA[<p>Writing code is easy. After a few years of practice, a programmer can solve any given problem in a variety of ways. It’s almost automatic.</p>
<p>Thinking is not so easy. Thinking takes effort. Think is not automatic. Thinking forces us to evaluate our assumptions. Sometimes we don’t want our assumptions questioned. We want to just start “work”. “The sooner I start coding the sooner I can get this feature/bug finished” - or so we tell ourselves. In reality we don’t want to think about all things we want to ignore. We just want to code. We want to get “something” finished.</p>
<p>Unfortunately if we don’t think about the problem we are about to solve, we’ll never completely solve it. There’ll always be “holes” in our logic.</p>
<p>I’ve been trying to spend more time thinking about a problem before diving into code the solution. The results have been really great. I understand the problem more and ask more of the “right” questions. I spend time thinking of the different implementation options and their pros and cons. The time spent thinking actually speeds up the coding process. Since I know exactly what has to be done, all that remains is for me to code the solution. Simple. :)</p>]]></description>
    <pubDate>Wed, 11 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-11-writing-code-is-easy.html</guid>
</item>
<item>
    <title>Surround yourself with Smart People</title>
    <link>http://blog.ssanj.net/posts/2015-03-08-surround-yourself-with-smart-people.html</link>
    <description><![CDATA[<p>In <a href="http://paulgraham.com/ecw.html">How to Be an Expert in a Changing World</a>, Paul Graham states:</p>
<blockquote>
<p>Surround yourself with the sort of people new ideas come from. If you want to notice quickly when your beliefs become obsolete, you can’t do better than to be friends with the people whose discoveries will make them so.</p>
</blockquote>
<p>Make it a point to befriend people smarter than yourself. Challenge your thinking. Do things differently. Follow a different crowd. Pay it forward by passing on your learning to someone else.</p>]]></description>
    <pubDate>Sun, 08 Mar 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-03-08-surround-yourself-with-smart-people.html</guid>
</item>
<item>
    <title>Time Poor. Priority Rich</title>
    <link>http://blog.ssanj.net/posts/2015-02-22-time-poor-priority-rich.html</link>
    <description><![CDATA[<h1 id="i-want-all-the-things">I want all the things</h1>
<p>As developers we have many projects on the go. Many new technologies we want to try out. Many new ways of working we want to trial. Many new concepts we need to understand. All these activities compete for our limited free time. Most likely you’ll only get a few hours of continuous time to spend across all these activities per week. So how can we focus on all these interests with limited time?</p>
<h1 id="three-please">Three please</h1>
<p>The first thing to realise is that you can’t focus on everything at the same time. You’ll never get anything done if you do. You need to chose. I’ve found that prioritising the work I do to be the simplest tool to ensure I get the most important work done. I write down the top three activities I’d like to either complete or focus on in my limited time. The way I choose my most important task is by asking the question: “Would I feel good about the time I spent working on this task if I got nothing else done?”. Then I repeat the same question for the second and third items. I do not list more than 3 items. I only focus on this small list and assume I’ll probably only get through first task. I may not even finish the first task. I have realised that I have to be okay with leaving work unfinished - if I run out of time. I turn off all social media. Then I get to work.</p>
<h1 id="enforce-the-gap">Enforce the gap</h1>
<p>I take a break when I finish a task on the list. It could be small as a minute to walk around or it could be a few minutes to grab a coffee etc or it could be longer. This break marks the end of a task and prevents me from jumping from task to task mindlessly. It helps me feel like I accomplished something. It also resets my brain to make it ready for the next task. This is helpful if my three tasks vary greatly in their implementation. Eg. Maybe I am moving from some backend code to frontend design and then onto installing some infrastructure software.</p>
<h1 id="same-time-next-week">Same time next week</h1>
<p>If I run out of time to finish even the first task, I can rest assured that I spent my time wisely focusing on the most important tasks at hand at the time. As I am okay with leaving the task unfinished for now, I know that I’ll get back to it next week - if it is still one of my top three tasks. I also try to wind down any tasks I might be doing ten to fifteen minutes prior to running out of all my alloted time. This helps me to stop when I need to without working overtime or rushing to get something done which obviously needs more time. Some things take time. You can’t complete everything in a day or a week or even a month.</p>
<h1 id="its-all-equal">It’s all equal</h1>
<p>What if I have tasks that are about equal in priority? I still choose only three. Then I split my time into three parts plus time for two breaks. I wind down each part ten to fifteen minutes prior to the end of the its alloted time. I then take a break as before. I then start the following task. This allows me to make reasonable progress across multiple tasks.</p>]]></description>
    <pubDate>Sun, 22 Feb 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-02-22-time-poor-priority-rich.html</guid>
</item>
<item>
    <title>Remove Untracked Changes with Git</title>
    <link>http://blog.ssanj.net/posts/2015-02-15-remove-untracked-changes-with-git.html</link>
    <description><![CDATA[<p>So you’ve got a bunch of untracked files and folders in your git repo and you don’t want to delete them all manually one-by-one. How do you use the power of git to do this for you?</p>
<p><strong>git clean</strong> will remove all untracked files for you.</p>
<p>There are several variants:</p>
<p>Perform a dry run to display which files will be deleted:</p>
<p><code>git clean -dn</code></p>
<p>Once you are satisfied with the output then run:</p>
<p><code>git clean -df</code></p>
<p>This will remove all files and directories that are not tracked.</p>
<p>If you would like to perform an interactive removal of files and directories then use:</p>
<p><code>git clean -di</code></p>]]></description>
    <pubDate>Sun, 15 Feb 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-02-15-remove-untracked-changes-with-git.html</guid>
</item>
<item>
    <title>Logstash and Other Things</title>
    <link>http://blog.ssanj.net/posts/2015-02-14-logstash-and-other-things.html</link>
    <description><![CDATA[<p>An very interesting and insightful presentation by Jordan Sissel about why and how <a href="http://logstash.net">Logstash</a> came about. This is from PuppetConf 2012.</p>
<iframe id="movie1" width="800" height="470" src="https://www.youtube.com/embed/RuUFnog29M4" frameborder="0" allowfullscreen></iframe>


<ol style="list-style-type: decimal">
<li>Yearly <a href="http://sysadvent.blogspot.com.au">Sysadvent</a> blog.</li>
<li><a href="https://github.com/jordansissel/fpm">FPM - Build packages for multiple platforms (deb, rpm, etc) with great ease and sanity</a></li>
<li>There’s too much data to read in a log file. We need some way of filtering it to make sense.</li>
</ol>
<p class="quote">
What else sucks? Shitty error messages!
</p>

<ol start="4" style="list-style-type: decimal">
<li>Write better error messages.</li>
<li>Hacks work as one-offs - not everyday. Hard to maintain. You are asked to write hacks all the time.</li>
</ol>
<div class="figure">
<img src="http://imgs.xkcd.com/comics/regular_expressions.png" alt="xkcd - regular expressions" /><p class="caption">xkcd - regular expressions</p>
</div>
<ol start="6" style="list-style-type: decimal">
<li>People are using you as their computer interface.</li>
</ol>
<p class="quote">
Don’t be a human keyboard.
</p>

<ol start="7" style="list-style-type: decimal">
<li>What is a log?</li>
</ol>
<p class="quote">
DATA + TIMESTAMP = LOG
</p>

<ol start="8" style="list-style-type: decimal">
<li>Lifecycle of a log entry: record &gt; transmit &gt; analyse &gt; store &gt; delete</li>
<li><p>Opensource tools: transport: flume, fluentd, scribe, rsyslog, syslog-ng search+analytics: hadoop, graylog2, elsa storage: hdfs, cassandra, elasticsearch</p></li>
<li>Use Grok:
<ul>
<li>named pattern: %{patternName:Name}.</li>
<li>reuse matched patterns and transformations.</li>
<li>has types: Numbers, Strings etc.</li>
<li>patterns are unit tested.</li>
<li>multiline matches for Stacktraces etc.</li>
</ul></li>
</ol>
<p class="quote">
Stop inventing shitty time formats!
</p>

<ol start="12" style="list-style-type: decimal">
<li>Statsd metrics can be visualized with tools like:
<ul>
<li>graphite</li>
<li>ganglia</li>
<li>circonus</li>
<li>boundary</li>
<li>librato</li>
<li>opentsdb</li>
<li>graylog2</li>
</ul></li>
<li>Apache uses gettimeofday() which changes when NTP synchronizes its clock. Leads to negative time values.</li>
</ol>
<p class="quote">
Does Apache have a Time Machine?
</p>

<ol start="14" style="list-style-type: decimal">
<li>Features:
<ul>
<li>Transport and process logs to and from anywhere.</li>
<li>Search and analytics.</li>
</ul></li>
<li>Design:
<ul>
<li>Logstash should fit your infrastructure.</li>
<li>Logstash is extendable (via plugins).</li>
</ul></li>
<li>Community:
<ul>
<li>If a newbie has a hard time it’s a bug (in the code or documentation etc).</li>
<li>Contributions are more than code (file bugs, feature requests, ideas,documentation etc).</li>
<li>Tools: Kibana, puppet module, logstash cli.</li>
</ul></li>
<li>Links:
<ul>
<li><a href="http://logstash.net">logstash.net</a></li>
<li><a href="https://groups.google.com/forum/#!forum/logstash-users">logstash-user@googlegroups.com</a></li>
<li>#logstash on freenode (I am Whack)</li>
<li><a href="https://github.com/elasticsearch/logstash/issues">issues</a></li>
<li><a href="https://twitter.com/jordansissel">@jordansissel</a></li>
</ul></li>
</ol>]]></description>
    <pubDate>Sat, 14 Feb 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-02-14-logstash-and-other-things.html</guid>
</item>

    </channel> 
</rss>

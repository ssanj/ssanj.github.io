<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>BabylonCandle</title>
        <link>http://blog.ssanj.net</link>
        <description><![CDATA[The blog of Sanjiv Sahayam]]></description>
        <atom:link href="http://blog.ssanj.net/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Sun, 06 Dec 2015 00:00:00 UT</lastBuildDate>
        <item>
    <title>Port Forwarding with a Docker Machine</title>
    <link>http://blog.ssanj.net/posts/2015-12-06-port-forwarding-with-a-docker-machine.html</link>
    <description><![CDATA[<p>Something a little annoying about setting up a server on Docker Machine is that to use the service you need to know the ip of the machine:</p>
<pre class="terminal scrollx"><code>docker-machine ip machine_name</code></pre>
<p>This can get tedious, specially if you are using GUI tools. In the last post <a href="http://sanj.ink/2015-12-06-how-to-ssh-into-a-docker-machine.html">I described a way to ssh into a Docker machine</a>. Because we have the power of ssh, we can now port forward:</p>
<pre class="terminal scrollx"><code>machine=machine_name; ssh -i ~/.docker/machine/machines/$machine/id_rsa docker@$(docker-machine ip $machine) -N -L local_port:localhost:machine_port</code></pre>
<p>Now we never have to remember the ip address of the Docker machine. We can simply connect to our local port on localhost.</p>]]></description>
    <pubDate>Sun, 06 Dec 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-12-06-port-forwarding-with-a-docker-machine.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How to SSH into a Docker Machine</title>
    <link>http://blog.ssanj.net/posts/2015-12-06-how-to-ssh-into-a-docker-machine.html</link>
    <description><![CDATA[<p>While you can use</p>
<pre class="terminal scrollx"><code>docker-machine ssh &lt;machine_name&gt;</code></pre>
<p>to ssh into a machine, I was wondering how to use vanilla ssh to achieve the same. I stumbled across a <a href="https://github.com/docker/machine/issues/1758">Docker Github issue</a> that had a very useful snippet by <a href="https://github.com/emilingerslev">emilingerslev</a>:</p>
<pre class="terminal scrollx"><code>machine=machine_name; ssh -i ~/.docker/machine/machines/$machine/id_rsa docker@$(docker-machine ip $machine)</code></pre>
<p>That’s all there is to it!</p>]]></description>
    <pubDate>Sun, 06 Dec 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-12-06-how-to-ssh-into-a-docker-machine.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Docker Cheat Sheet</title>
    <link>http://blog.ssanj.net/posts/2015-11-29-docker-cheat-sheet.html</link>
    <description><![CDATA[<p>Here are some common <a href="http://www.docker.com">Docker</a> and <a href="https://docs.docker.com/machine">Docker-Machine</a> commands. You only need Docker Machine if you are on OSX.</p>
<h2 id="docker-machine">Docker Machine</h2>
<p>Create the default machine:</p>
<pre class="terminal scrollx"><code>docker-machine create --driver virtualbox default</code></pre>
<p>The default machine is created at:</p>
<pre class="terminal scrollx"><code>~/.docker/machine/machines/default</code></pre>
<p>List machines:</p>
<pre class="terminal scrollx"><code>docker-machine ls</code></pre>
<p>Show environment properties of machine:</p>
<pre class="terminal scrollx"><code>docker-machine env machine_name</code></pre>
<p>Shows ip of machine:</p>
<pre class="terminal scrollx"><code>docker machine ip machine_name</code></pre>
<p>Start a machine:</p>
<pre class="terminal scrollx"><code>docker-machine start machine_name</code></pre>
<p>SSH into a machine:</p>
<pre class="terminal scrollx"><code>docker-machine ssh machine_name</code></pre>
<p>Show detailed information about a machine:</p>
<pre class="terminal scrollx"><code>docker-machine inspect machine_name</code></pre>
<h2 id="docker">Docker</h2>
<p>Create a terminal bound to machine. <em>You have to do this before you run any docker commands</em>:</p>
<pre class="terminal scrollx"><code>eval &quot;$(docker-machine env machine_name)&quot;</code></pre>
<p>Run a container as a daemon:</p>
<pre class="terminal scrollx"><code>docker run -d ...</code></pre>
<p>Run a container exposing ports:</p>
<pre class="terminal scrollx"><code>docker run -p external_port:internal_port ...</code></pre>
<p>Run a contain exposing random ports:</p>
<pre class="terminal scrollx"><code>docker run -P (maps internal port to random external port) ...</code></pre>
<p>Run a container with a mapped volume:</p>
<pre class="terminal scrollx"><code>docker run -v host_path:container_path ...</code></pre>
<p>Run a container with environment arguments:</p>
<pre class="terminal scrollx"><code>docker run -e ENV_NAME_1=value1 -e ENV_NAME_2=value2 ...</code></pre>
<p>Run a container with mapped ports, volumns and an enviroment variable:</p>
<pre class="terminal scrollx"><code>docker run --name some-mysql \
           -p 3306:3306 \
           -v /mydata:/var/lib/mysql \
           -e MYSQL_ROOT_PASSWORD=some_secret \
           -d mysql</code></pre>
<p>Connect to a running container:</p>
<pre class="terminal scrollx"><code>docker exec -it container_name bash</code></pre>
<p>List Docker processes:</p>
<pre class="terminal scrollx"><code>docker ps</code></pre>
<p>List last run container:</p>
<pre class="terminal scrollx"><code>docker ps -l</code></pre>
<p>List all containers running or otherwise:</p>
<pre class="terminal scrollx"><code>docker ps -a</code></pre>
<p>List Docker images:</p>
<pre class="terminal scrollx"><code>docker images</code></pre>
<p>Start a Docker container:</p>
<pre class="terminal scrollx"><code>docker start container</code></pre>
<p>Stop a Docker container:</p>
<pre class="terminal scrollx"><code>docker stop container</code></pre>
<p>Remove a Docker container:</p>
<pre class="terminal scrollx"><code>docker rm container</code></pre>
<p>Show logs of a container:</p>
<pre class="terminal scrollx"><code>docker logs -f container</code></pre>
<p>Show port mappings for a container:</p>
<pre class="terminal scrollx"><code>docker port container</code></pre>]]></description>
    <pubDate>Sun, 29 Nov 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-11-29-docker-cheat-sheet.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Your Solution Wasn&apos;t up to Speed</title>
    <link>http://blog.ssanj.net/posts/2015-11-11-not-up-to-speed.html</link>
    <description><![CDATA[<p>As I’m looking for my next awesome workplace, I’ve been applying for quite a few jobs. Most need some form of assignment completed. If you don’t end up getting these jobs, as I didn’t, you might feel like you got gypped and wasted a bunch of your time. What can make this so much better for the unsuccessful candidate is some proper feedback as to what could be improved on or what was lacking. This is crucial for anyone trying to improve how they develop software or trying to get better at anything.</p>
<p>Lots of times as a candidate you get something vague like:</p>
<blockquote>
<p>you were not successful.</p>
</blockquote>
<p>One company I asked feedback from said:</p>
<blockquote>
<p>The feedback from the technical team was that your solution wasn’t up to speed for what we’d expect from an experienced developer.</p>
</blockquote>
<p>Ouch! Talk about unnecessarily harsh and vague. Not really the feedback I expected from “experienced” developers.</p>
<p>We are all busy. If you ask potential candidates to complete a take-home assignment then you should be prepared to spend a little time reviewing the assignments. I spent roughly five hours in the assignment where my solution was not what they expected. They gave me exactly zero minutes in return. Just a glib reply and they are off to the next candidate. This type of one-sided interview processes are totally broken.</p>
<p>Don’t expect everyone to fall into some cookie-cutter box with the exact same solution. There are always many ways to solve any problem. Ideally this feedback should be somewhat like a code review where you try to understand what was done and give some feedback. Maybe this is asking for too much from the IT industry.</p>
<p>If a company has a mature interviewing process, they know what they are looking for and can articulate it fairly clearly. In addition how a company behaves after you are unsuccessful says a lot about their culture and how they treat their employees. People are constantly interviewing and are being interviewed for jobs so it pays to have some empathy on both sides of the fence.</p>
<p>I feel like companies never seem to understand that having a candidate spend hours of unpaid work on an assignment is a huge ask. With that in mind some human decency when a candidate doesn’t meet the company’s expectations, would go a long way.</p>]]></description>
    <pubDate>Wed, 11 Nov 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-11-11-not-up-to-speed.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Short Tech Books</title>
    <link>http://blog.ssanj.net/posts/2015-11-08-short-tech-books.html</link>
    <description><![CDATA[<p>Technical books are always so long. But recently I’ve come across two very short books:</p>
<ol style="list-style-type: decimal">
<li><a href="http://www.amazon.com/Effective-Akka-Jamie-Allen/dp/1449360076">Effective Akka</a> by <a href="https://twitter.com/jamie_allen">Jamie Allen</a> (74 pages)</li>
<li><a href="http://www.artima.com/shop/scalacheck">ScalaCheck</a> by Rickard Nilsson (137 - 148 pages depending on whether you get the ebook or print)</li>
</ol>
<p>These books are awesome and cover one topic very well. A short book gives the reader the motivation to completely read it, instead of giving up around page 300. I hope this catches on.</p>]]></description>
    <pubDate>Sun, 08 Nov 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-11-08-short-tech-books.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>On the Outside</title>
    <link>http://blog.ssanj.net/posts/2015-11-08-on-the-outside.html</link>
    <description><![CDATA[<p>Leaving a workplace is a solo mission. It’s personal. You leave mentally way before you physically hand in your resignation. You struggle with “trying to make the best of it” for a while. When that fails, you start looking around for other jobs. All the while you may have many “allies” who feel the same way about your workplace. You spur each other on. “We are all going to get out of here” you think, like you’re escaping some kind of prison.</p>
<p>Once you do hand in your resignation, you become a pariah. An outcast. No matter how valid your reasons for leaving or what issues exist, you have chosen to leave. Your future now diverges from the future of every other person that chooses to stay. Your former allies now form new alliances. You are excluded from plans and discussions of the future. It’s not a one-way exclusion other. You also remove yourself from discussions and from “caring” too much about anything. Writing crappy code? Go for it. Hiring stupid people? Champion! It’s like watching the makings of a train wreck which you won’t be there to witness.</p>
<p>As the person who’s leaving for either a new opportunity (or just a change as is my case), you start to live your life with more hope of a brighter and different future. It’s still sad to leave the people you’ve worked with for so many months, behind.</p>
<p>One of the worst things is having to wait out your resignation period before heading off. It would be wonderful if you could just hand in your resignation and be done with it. Have some instant closure. But that’s not the case usually. For me, it’s a six week period of total agony and boredom. All the while witnessing continual reinforcement of the reasons that lead to this decision.</p>]]></description>
    <pubDate>Sun, 08 Nov 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-11-08-on-the-outside.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Git Push Modes</title>
    <link>http://blog.ssanj.net/posts/2015-11-08-git-push-modes.html</link>
    <description><![CDATA[<p>If you’ve tried to push to git recently after a new installation you might get a warning of the sort:</p>
<blockquote>
<p>warning: push.default is unset; its implicit value has changed in Git 2.0 from ‘matching’ to ‘simple’.</p>
</blockquote>
<p>So what does this mean? The previous default behaviour (“matching”) was to push all local branches that had remote counterparts whenever you did a push. While this seems “useful” it can lead to potential issues</p>
<p>Example: You complete work on your current branch and choose to push to remote. You forget that you have other branches with unfinished work that you don’t want pushed. All branches now get pushed to remote, which is not what you wanted.</p>
<p>The new default for Git 2.0 is the “simple” mode which only pushes the current branch you are working on.</p>
<p>The Git documentation describes the four Git push modes:</p>
<ul>
<li>nothing - do not push anything (error out) unless a refspec is explicitly given.</li>
<li>current - push the current branch to update a branch with the same name on the receiving end. When pushing to a remote that is different from the remote you normally pull from, work as current.</li>
<li>upstream - push the current branch back to the branch whose changes are usually integrated into the current branch (which is called @{upstream}). This mode only makes sense if you are pushing to the same repository you would normally pull from.</li>
<li>simple - Works like upstream with an added safety to refuse to push if the upstream branch’s name is different from the local one.</li>
<li>matching - push all branches having the same name on both ends.</li>
</ul>]]></description>
    <pubDate>Sun, 08 Nov 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-11-08-git-push-modes.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Things a Little Bird Told Me - Biz Stone</title>
    <link>http://blog.ssanj.net/posts/2015-10-27-things-a-little-bird-told-me-biz-stone.html</link>
    <description><![CDATA[<p>Ideas from the book <a href="http://thingsalittlebirdtoldme.com">Things a Little Bird Told Me by Biz Stone</a>.</p>
<div class="quote">
When you’re starting a company, you sometimes have nothing more than an idea. And sometimes you don’t even have the idea - just the supreme confidence that one day you will have an idea. You have to begin somewhere, so you declare yourself an entrepreneur just like Wile E. Coyote declares himself a genius. Then you make a business card and give yourself the title FOUNDER and CEO.
</div>
<ul>
<li>There are good people everywhere.</li>
<li>A company can build a business, do good in society, and have fun. These three goals can run alongside each other, without being dominated by the bottom line.</li>
<li>People given the right tools, can accomplish amazing things.</li>
</ul>
<div class="quote">
We can change lives. We can change the world.
</div>
<ul>
<li>If we pretend to know all the answers we may get a closer look at all the questions.</li>
<li>Visualise what you want to see happen for yourself in the next two years.</li>
<li>If you take an idea and just hold it in your head, you unconsciously start to do things that advance you toward that goal.</li>
<li>Opportunity is manufactured.</li>
<li>Rather than waiting and pouncing with a high degree of failure, you might as well go ahead and create the set of circumstances on your own. If you make the opportunity, you’ll be the first in position to take advantage of it.</li>
<li>Being the person who makes something happen for yourself is the core of entrepreneurship.</li>
<li>Luck is a piece that is out of your hands. But as you create opportunities for yourself, your odds at the lottery go way up.</li>
</ul>
<div class="quote">
The way I saw it, people went to college in order to be qualified to get a job like the one I was being offered.
</div>
<ul>
<li>Believing in yourself, the genius you, means you have confidence in your ideas before they even exist. In order to have a vision for business, or your potential, you must allocate space for that vision.</li>
<li>Inventing your dreams is the first and biggest step toward making it come true.</li>
<li>Learn not to care about hard work being wasted. You can always put it in your portfolio. Don’t take rejection personally.</li>
<li>Creativity is limitless.</li>
<li>For any one problem there are infinite potential solutions.</li>
<li>Challenge yourself everyday.</li>
<li>Experience and curiosity drives us to make unexpected, offbeat connections. It is these non-linear steps that often lead to the greatest work.</li>
<li>Asking questions is free. Do it!</li>
<li>Are you in an environment where creativity thrives? Is there room for new ideas every day? Can you make room?</li>
</ul>
<div class="quote">
If you don’t love what you are building, if you’re not an avid user yourself, then you will most likely fail even if you’re doing everything else right.
</div>
<ul>
<li>You know in your heart when something is worth pursuing; you’re not sure exactly why, but it doesn’t matter. Success isn’t guaranteed, but failure is certain if you aren’t truly emotionally invested in your work.</li>
<li>It was a joy to work on Twitter.</li>
</ul>
<div class="quote">
I always tell people to back into it. Imagine working on something you love. Describe it to yourself. Don’t focus on how much money you want. Instead think about this: What type of people surround you? What sort of work are they doing? How do you get to work? What adjectives would people use to describe what you do?
</div>
<ul>
<li>Embrace your constraints, whether they are creative, physical, economic or self-imposed. They are provocative. They are challenging. They wake you up. They make you more creative. They make you better.</li>
<li>Risks breed success.</li>
</ul>
<div class="quote">
When it comes to taking risks, so many of us hedge. It’s natural to set up safety nets. I’ve often met with entrepreneurs who tell me that they are hanging on to their job and tinkering at night on their passion. Of course they are; they need to feed their families. The problem is unless you are willing to accept the worst-case scenario, you can’t expect to achieve the best-case scenario. If it is going to reach the potential you dream it will, your true calling needs all your attention. Willingness to take risks is the path to success.
</div>
<ul>
<li>In order to succeed spectacularly, you must be ready to fail spectacularly.</li>
<li>Embrace the upside of fantastic, epic, earth-shattering, life-changing failure. It’s totally worth it if you succeed. And if you fail, you’ve got a great story to tell - and some experience that gives you a serious edge the next time you go for it.</li>
<li>Gray mode - separating the system into different pieces so that if one piece failed, it could be isolated and not affect the other pieces.</li>
<li>You don’t have to advertise your failings but to hide them is, on some level, deceptive. This is linked to the value of vulnerability. When you let people understand that you are people like they are, passionate but imperfect, what you get in return is goodwill.</li>
</ul>
<div class="quote">
I believe in honesty, and I believe that explaing mistakes to the people who used our service was the best way to create a long-term relationship with them.
</div>
<ul>
<li>He wanted people to know that they were doing their best, but he didn’t want to hide or downplay their flaws. He decided that they would own their many imperfections.</li>
</ul>
<div class="quote">
If the system crashed, I’d walk down to the engineers to investigate what had happened. Then I’d go on the Twitter blog to report what I’d discovered.
</div>
<ul>
<li>The loudest complainers are often your biggest fans.</li>
<li>It doesn’t pay to act bulletproof. Nobody is flawless, and when you act as if you are, it always rings false.</li>
</ul>
<div class="quote">
Not only did we encourage angry people to email us, but I put my cell number on the home page of the site and answered the phone when it rang.
</div>
<ul>
<li>He learned that failure was part of the path and that it was worth the risk. It was a critical component of growth.</li>
<li>Every company needs an idealist.</li>
<li>Innovation comes from <a href="http://www.amazon.com/Where-Good-Ideas-Come-From/dp/1594485380">pre-existing ideas</a>.</li>
<li>When everything is wrong and broken, instead of harping on what’s wrong and broken, find what works and build on that.</li>
<li>An open, curious, optimistic mind yields solutions, and has a better time along the way.</li>
<li>Twitter was proof that leaderless self-organising systems could be true agents of change.</li>
<li>Twitter connected people everywhere instantly to what was most meaningful to them.</li>
</ul>
<div class="quote">
The point is to trust your instincts, even if you’re smaller and less powerful than the other guy.
</div>
<ul>
<li>Watching for patterns of use across the system, they built features based on those patterns.</li>
</ul>
<div class="quote">
If I was willing to face the consequences, I could play by my own rules.
</div>
<ul>
<li>Trust your instincts, know what you want, and believe in your ability to achieve it.</li>
<li>We should always seek knowledge even in the face of fear.</li>
</ul>
<h2 id="assumptions-for-twitter-employees">Assumptions for Twitter Employees</h2>
<ol style="list-style-type: decimal">
<li>We don’t always know what’s going to happen.</li>
<li>There are more smart people out there than in here.</li>
<li>We will win if we do the right thing for our users.</li>
<li>The only deal worth doing is a win-win deal.</li>
<li>Our coworkers are smart and they have good intentions.</li>
<li>We can build a business, change the world and have fun.</li>
</ol>
<h3 id="we-dont-always-know-whats-going-to-happen">We don’t always know what’s going to happen</h3>
<ul>
<li>If we think we know what will come next, we’ll fail. Instead, we need to leave the door open, for unknown developments and surprises. The core element of this assumption is humility.</li>
<li>The ability to listen, watch, and draw lessons from the obvious and unlikely places breeds originality and growth.</li>
</ul>
<h3 id="there-are-more-smart-people-out-there-than-in-here">There are more smart people out there than in here</h3>
<ul>
<li>We shouldn’t look only internally for answers to challenges.</li>
<li>Ask people. Look around. Research. Keep a level head. Don’t think you are so great. Don’t assume that we’re the only people who can solve our problem.</li>
</ul>
<h3 id="we-will-win-if-we-do-the-right-thing-for-our-users">We will win if we do the right thing for our users</h3>
<ul>
<li>Does it make the experience better for people?</li>
<li>More than 99% of people just leave the settings on default.</li>
<li>Making a feature that is optional is like throwing it into the junk drawer.</li>
<li>It’s our responsibility to decide what features make the most sense. If we are going to build it, let’s use it.</li>
</ul>
<div class="quote">
<p>The place where companies most frequently lose sight of what’s best for their customers is when it comes to monetisation.</p>
<p>Should we make ads 50 percent bigger so we can make more money? It makes the page ugly and hard to read. Is that good for the users? No.</p>
<p>Should we split our company into two separate buildings because we can’t afford one building? It leads to confusion and poor decisions on the product end. Is that good for our users? No.</p>
<p>Should we deceive the user into clicking on an ad? Obviously not. Should we trick our users into clicking on anything? Hell no!</p>
<p>These can be tough choices especially if you really need the money. But there’s got to be another way. Creativity is a renewable resource. Don’t sell out your product. Keep thinking. Consider whether the average person is going to benefit. Measure every decision against that requirement.</p>
</div>
<h3 id="the-only-deal-worth-doing-is-a-win-win-deal">The only deal worth doing is a win-win deal</h3>
<ul>
<li>There’s no such thing as a good deal in which one party gets the short end of the stick. Deals are like relationships. We want deals that are going to last.</li>
<li>To some extent, in every deal your reputation and your business are at stake.</li>
</ul>
<div class="quote">
If you have a list of people that you don’t want to lose at any cost, don’t wait until they quit to offer them more money and more stock options.
</div>
<h3 id="we-can-build-a-business-change-the-world-and-have-fun">We can build a business, change the world and have fun</h3>
<div class="quote">
Traditionally, companies are driven by financial success. But I want the new definition to include making a positive impact on the world - and loving your work. I want to set a higher bar for success. If any one of these three tenets is missing, then you shouldn’t be considered successful by your own terms or those of society.
</div>
<ul>
<li>Helping others is helping yourself.</li>
<li>Helping others gives us a feeling of success. It makes our lives meaningful.</li>
<li>If you give people a simple way to help others, they will.</li>
<li>People are good, and if you give them the right tools, they’ll use them for the right thing.</li>
<li>In times of abundance, it’s human nature to seek a more purposeful life. This is often best satisfied by practising selfless concern for the well-being of others.</li>
</ul>
<div class="quote">
We could do business with a higher level of ambition and better ways to measure success. We could embrace our employees’ innate desire to do good. There is value in selflessness. Companies must understand this pattern and develop products that deliver deeper meaning. It’s important to recognise value before profit.
</div>]]></description>
    <pubDate>Tue, 27 Oct 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-10-27-things-a-little-bird-told-me-biz-stone.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Where are the Default Packages for Sublime Text Located on OSX</title>
    <link>http://blog.ssanj.net/posts/2015-10-25-where-are-the-default-packages-for-sublime-text-located-on-osx.html</link>
    <description><![CDATA[<p>If you have a look in your Sublime Text installation on OSX under:</p>
<pre class="terminal"><code>/Users/sanj/Library/Application Support/Sublime Text 3/Packages</code></pre>
<p>you’ll notice that none of the default plugins or configurations are to be found.</p>
<p>They live in at another <a href="http://www.sublimetext.com/forum/viewtopic.php?f=2&amp;t=13236">location</a> at:</p>
<pre class="terminal"><code>/Applications/Sublime Text 3.app/Contents/MacOS/Packages/</code></pre>
<p>If you can’t find the Sublime Text 3.app folder try:</p>
<pre class="terminal"><code>/Applications/Sublime Text.app/Contents/MacOS/Packages</code></pre>
<p>All .sublime-package files are zip files. To have a look at their contents simply rename them to .zip files and extract.</p>]]></description>
    <pubDate>Sun, 25 Oct 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-10-25-where-are-the-default-packages-for-sublime-text-located-on-osx.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How to Use Sublime Text as Your Default Git Editor</title>
    <link>http://blog.ssanj.net/posts/2015-10-25-how-to-use-sublime-text-as-your-default-git-editor.html</link>
    <description><![CDATA[<p>If you want to use Sublime Text to edit your Git comments then you are just a couple of steps away.</p>
<p>First, you need to make sure your sublime executable is on your system or user path. I have my user’s bin directory (~/bin) on my path. I create a symlink to the <a href="http://www.sublimetext.com/docs/3/osx_command_line.html">subl</a> executable as ~/bin/sublime.</p>
<pre class="terminal"><code>ln -s /Applications/Sublime Text.app/Contents/SharedSupport/bin/subl ~/bin/sublime</code></pre>
<p><em>Notice how I’ve renamed the executable from subl to sublime.</em></p>
<p>Next you need to <a href="https://help.github.com/articles/associating-text-editors-with-git">edit your Git config</a> and set your default editor:</p>
<pre class="terminal"><code>git config --global core.editor &quot;sublime -n -w&quot;</code></pre>
<p>The editor options are:</p>
<pre class="terminal"><code>n - Open a new window
w - Wait for the files to be closed before returning</code></pre>
<p>The next time you need to edit anything for Git you’ll be doing it in Sublime! :)</p>]]></description>
    <pubDate>Sun, 25 Oct 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-10-25-how-to-use-sublime-text-as-your-default-git-editor.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>

    </channel>
</rss>

<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>BabylonCandle</title>
        <link>http://blog.ssanj.net</link>
        <description><![CDATA[The blog of Sanjiv Sahayam]]></description>
        <atom:link href="http://blog.ssanj.net/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 12 Aug 2015 00:00:00 UT</lastBuildDate>
        <item>
    <title>The Most Import Comparison</title>
    <link>http://blog.ssanj.net/posts/2015-08-12-the-most-important-comparison.html</link>
    <description><![CDATA[<div>
<div class="quote">
The most important comparison, in fact, is comparing your work to what you’re capable of.
</div>
<div class="attribution">
Seth Godin
</div>
</div>]]></description>
    <pubDate>Wed, 12 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-12-the-most-important-comparison.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Solve Hard Problems</title>
    <link>http://blog.ssanj.net/posts/2015-08-10-solve-hard-problems.html</link>
    <description><![CDATA[<p>Computers are good at many things that people are not good at. Complex calculations. Laboriously detailed tasks. Multitasking. Some decisions can only be made by people - for the moment at least. As <a href="http://sanj.ink/posts/2014-10-14-tim-brown-on-thinking-big.html">Tim Brown said</a> we need to make software that makes our lives easier and more enjoyable.</p>
<p>Now I’m not saying creating ToDo apps don’t make our lives easier. But we can simply skip the app all-together and use a pen and paper. It’s not really solving a problem we can’t solve without a computer.</p>
<p>What hard problems can Computers help us solve? What can we make possible that isn’t? Once we build it will it make our lives better?</p>]]></description>
    <pubDate>Mon, 10 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-10-solve-hard-problems.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>From Startup to Company</title>
    <link>http://blog.ssanj.net/posts/2015-08-09-from-startup-to-company.html</link>
    <description><![CDATA[<p>Founders of a Startup have to overcome many obstacles. Lack of money is the primary one. They may have a limited amount of time to get their product to market before a competitor beats them to it. Most times they have to create something completely new. They incur technical debt like it’s going out of fashion. The early adopters are their first line of testing.</p>
<p>Dealing with these obstacles requires a particular type of person. It needs a survivalist mindset. Get the feature completed at any cost. Work around the clock. Cut corners. Be very frugal. Think short term. The Startup might not be around next week.</p>
<p>So what happens when a Startup graduates to being a Company? It could be that it receives around of funding. Or it could be purchased by another company. Or it could IPO on the stock exchange. Whatever the impetus, the conditions under which the Startup was founded have changed dramatically. The direction which it needs to take has also changed.</p>
<p>There now needs to be long term strategic growth. There maybe be overlords to appease. There maybe shareholders to payback. They usually need to make massive profit instead of just surviving. They need to payback all the technical debt the was accrued along the way so they can build on the platform they’ve created. They will need to hire more employees. The way they manage these employees will be different to the way they managed their only two employees. These are completely new challenges to the Startup founders.</p>
<p>Take a person who has lived through a great depression. They are forever scarred by the lack of resources such as food, money and employment. They might still hoard food to this day even though the conditions under which that might have been useful have long ceased. I think Startup founders have a similar problem. They can’t continue to operate in the way they always have. The landscape has changed.</p>
<p>Transitioning from a Startup to a Company can be jarring. It is a hard thing to do. This is somewhat unexpected as becoming a Company seems to be the end of existing struggle. It’s also the start of a completely new one.</p>]]></description>
    <pubDate>Sun, 09 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-09-from-startup-to-company.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Balancing Act</title>
    <link>http://blog.ssanj.net/posts/2015-08-09-balancing-act.html</link>
    <description><![CDATA[<p>Work is a balance between the work you’re paid to do and the work you want to do.</p>]]></description>
    <pubDate>Sun, 09 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-09-balancing-act.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Seth Godin on Art</title>
    <link>http://blog.ssanj.net/posts/2015-08-02-seth-godin-on-art.html</link>
    <description><![CDATA[<p>Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2015/07/what-is-your-art.html">has some profound insights</a> when it comes to making Art.</p>
<p>He starts off by defining Art as:</p>
<blockquote>
<p>Art is a human act, a generous contribution, something that might not work, and it is intended to change the recipient for the better, often causing a connection to happen.</p>
</blockquote>
<p>Then he goes on to say:</p>
<blockquote>
<p>You can be perfect or you can make art.</p>
</blockquote>
<blockquote>
<p>You can keep track of what you get in return, or you can make art.</p>
</blockquote>
<blockquote>
<p>You can enjoy the status quo, or you can make art.</p>
</blockquote>
<p>And the concludes by giving us a choice:</p>
<blockquote>
<p>The most difficult part might be in choosing whether you want to make art at all, and committing to what it requires of you.</p>
</blockquote>]]></description>
    <pubDate>Sun, 02 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-02-seth-godin-on-art.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Run a Test Method of a Test Class from SBT</title>
    <link>http://blog.ssanj.net/posts/2015-08-02-run-a-test-method-of-a-test-class-from-sbt.html</link>
    <description><![CDATA[<p>As <a href="http://sanj.ink/posts/2015-07-15-using-sublime-for-scala-development.html">I use Sublime Text for most of my Scala development</a> at the mo, I’ve had to forego some of the niceties that Intellij brought to the table. One of those niceties was running a single test method of a test class.</p>
<p>I do all my compilation and running-of-tests through an interactive SBT session. I knew how to run only a single test with <strong>testOnly</strong>.</p>
<p>Here’s an example of running only the <a href="https://github.com/puffnfresh/wartremover/blob/latest-release/core/src/test/scala/wartremover/warts/ListTest.scala">ListTest</a> class in the <a href="https://github.com/puffnfresh/wartremover">Wartremover project</a>:</p>
<pre class="terminal scrollx"><code>&gt; testOnly org.brianmckenna.wartremover.test.ListTest
[info] ListTest:
[info] - can&#39;t use List#head on List
[info] - can&#39;t use List#tail on List
[info] - can&#39;t use List#init on List
[info] - can&#39;t use List#last on List
[info] - can&#39;t use List#reduce on List
[info] - can&#39;t use List#reduceLeft on List
[info] - can&#39;t use List#reduceRight on List
[info] - ListOps wart obeys SuppressWarnings
[info] Run completed in 211 milliseconds.
[info] Total number of tests run: 8
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 8, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.</code></pre>
<p>What I did not know was how to run a single test method within a test class. This functionality depends on the test framework in use.</p>
<h2 id="scalatest">ScalaTest</h2>
<p>The incantation for <a href="http://www.scalatest.org">ScalaTest</a> is:</p>
<pre class="terminal scrollx"><code>testOnly *YourTestClass -- -z &quot;name of the test you want to run&quot;</code></pre>
<p>To run only the <strong>can’t use List#reduce on List</strong> test within the ListTest class:</p>
<pre class="terminal scrollx"><code>&gt; testOnly org.brianmckenna.wartremover.test.ListTest -- -z &quot;can&#39;t use List#reduce on List&quot;
[info] ListTest:
[info] - can&#39;t use List#reduce on List
[info] Run completed in 90 milliseconds.
[info] Total number of tests run: 1
[info] Suites: completed 1, aborted 0
[info] Tests: succeeded 1, failed 0, canceled 0, ignored 0, pending 0
[info] All tests passed.</code></pre>
<h2 id="specs2">Specs2</h2>
<p>The incantation for <a href="https://etorreborre.github.io/specs2">Specs2</a> is:</p>
<pre class="terminal scrollx"><code>testOnly *YourTestClass -- -ex &quot;name of the test you want to run&quot;</code></pre>
<p>Taking the <a href="https://github.com/markhibberd/pirate">pirate</a> project as an example, we can run only the <a href="https://github.com/markhibberd/pirate/blob/master/src/test/scala/pirate.internal/NondetTSpec.scala">NondetTSpec</a> with:</p>
<pre class="terminal scrollx"><code>&gt; testOnly pirate.internal.NondetTSpec
[info] NondetTSpec
[info]
[info]   NondetT Laws
[info]   ============
[info]
[info]   + NondetT is an equal (for tests)
[info]   + NondetT is a monad
[info]   + NondetT is a monad plus
[info]   + NondetT is a strong monad plus
[info]
[info]
[info] Total for specification NondetTSpec
[info] Finished in 9 ms
[info] 4 examples, 400 expectations, 0 failure, 0 error
[info] Passed: Total 4, Failed 0, Errors 0, Passed 4</code></pre>
<p>Then to run only the <strong>NondetT is a monad plus</strong> test:</p>
<pre class="terminal scrollx"><code>&gt; testOnly pirate.internal.NondetTSpec -- -ex &quot;NondetT is a monad plus&quot;
[info] NondetTSpec
[info]
[info]
[info]   NondetT Laws
[info]   ============
[info]
[info]
[info]
[info]   + NondetT is a monad plus
[info]
[info]
[info]
[info] Total for specification NondetTSpec
[info] Finished in 9 ms
[info] 1 example, 100 expectations, 0 failure, 0 error
[info] Passed: Total 1, Failed 0, Errors 0, Passed 1</code></pre>
<p>Having differing parameters to each test frameworks is laborious. It would be nice if SBT provided some support for at least ScalaTest and Specs2 out of the box.</p>
<p><em>I got some clues on how to make these work from <a href="https://github.com/sbt/sbt/issues/911">here</a></em>.</p>]]></description>
    <pubDate>Sun, 02 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-02-run-a-test-method-of-a-test-class-from-sbt.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Quick File Creator Sublime Text Plugin</title>
    <link>http://blog.ssanj.net/posts/2015-08-02-quick-file-creator-sublime-text-plugin.html</link>
    <description><![CDATA[<p>My friend <a href="https://twitter.com/edwardsmatt">Matt</a> put me on to this cool Sublime Text plugin called <a href="https://packagecontrol.io/packages/Quick%20File%20Creator">Quick File Creator</a>. It basically lets you create a file or directory anywhere within your project without having to navigate to it. The doco states:</p>
<blockquote>
<p>This plugin instead pops up a quick panel that lets you pick the directory for the new file or subdirectory using the built-in fuzzy matching. If you are currently editing a file, that file’s directory will be located at the top of the list to make it even easier to create the new file or subdirectory in the same location. Select a directory, input the new name in the input panel at the bottom of the window, and you’re done!</p>
</blockquote>
<div class="figure">
<img src="/images/quick_file_creator_popup.jpg" alt="Quick File Creator - Sublime Text Plugin" />
<p class="caption">Quick File Creator - Sublime Text Plugin</p>
</div>
<p>You can also exclude directories you do not care about through your project settings:</p>
<div class="sourceCode"><pre class="sourceCode javascript scrollx"><code class="sourceCode javascript"><span class="op">{</span>
    <span class="st">&quot;SublimeQuickFileCreator&quot;</span><span class="op">:</span>
      <span class="op">{</span>
        <span class="st">&quot;excluded_dir_patterns&quot;</span><span class="op">:</span>
        [
          <span class="st">&quot;tmp.*&quot;</span><span class="op">,</span> <span class="st">&quot;|.git&quot;</span><span class="op">,</span> <span class="st">&quot;|.svn&quot;</span><span class="op">,</span> <span class="st">&quot;|.hg&quot;</span>
        ]
      <span class="op">}</span>
<span class="op">}</span></code></pre></div>
<p>or User preferences:</p>
<div class="sourceCode"><pre class="sourceCode javascript scrollx"><code class="sourceCode javascript"><span class="op">{</span>
  <span class="st">&quot;excluded_dir_patterns&quot;</span><span class="op">:</span> [
    <span class="st">&quot;tmp&quot;</span><span class="op">,</span> <span class="st">&quot;|.git&quot;</span><span class="op">,</span> <span class="st">&quot;|.svn&quot;</span>
  ]
<span class="op">}</span></code></pre></div>
<p>Some caveats:</p>
<blockquote>
<p>Note that each pattern is anchored to the beginning and end of the directory name, so you should not use ^ or $ in your patterns. Also, since ST2 does not allow backslashes in settings files, use a vertical bar (|) instead of a backslash to escape special regex symbols such as dots in directory names.</p>
</blockquote>
<p>The other brilliant feature is:</p>
<blockquote>
<p>The file/folder input panel supports recursive folder or file creation. If the parent path does not exist then the path will be created.</p>
</blockquote>
<p>Need to create a package structure for your java/scala project? No problemo! QFC will create the full package path and your class file at the same time! :)</p>]]></description>
    <pubDate>Sun, 02 Aug 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-08-02-quick-file-creator-sublime-text-plugin.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Writing is a Habit</title>
    <link>http://blog.ssanj.net/posts/2015-07-25-writing-is-a-habit.html</link>
    <description><![CDATA[<p>Writing is a habit. Just like any other habit, it gets stronger the more you do it.</p>]]></description>
    <pubDate>Sat, 25 Jul 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-07-25-writing-is-a-habit.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Real People Still Exist</title>
    <link>http://blog.ssanj.net/posts/2015-07-25-real-people-still-exist.html</link>
    <description><![CDATA[<p>I was on my way to work on a crowded train. I was in one of those carriages where people sit in rows on either side as opposed to next to each other.</p>
<p>An old lady, maybe in her sixties, was making her way through the train. She suddenly trips and falls face-first onto the floor. She lands on the floor next to the lady sitting by me. We all get a fright.</p>
<p>In an instant, everyone put down their phones and unplugged their headphones. Many rushed to her aid and lifted her off the ground. It must have been an awful experience for her. Someone gave her a seat. She started laughing hysterically for about ten seconds. I saw a young lady give her a smile and a nod as if to say “you’re going to be okay.”</p>
<p>While what happened was horrible, it gave me hope. Hiding behind all those digital devices were people. Bona fide human beings who still cared.</p>]]></description>
    <pubDate>Sat, 25 Jul 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-07-25-real-people-still-exist.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Developing Software is not Easy</title>
    <link>http://blog.ssanj.net/posts/2015-07-25-developing-software-is-not-easy.html</link>
    <description><![CDATA[<p>Anyone who tells you different doesn’t know what they are talking about.</p>
<p>You might hear something like:</p>
<blockquote>
<p>It’s a simple fix. All you have to do is do X.</p>
</blockquote>
<p>Things always seem simpler to people who do not understand the implications of the changes they want you to make.</p>
<p>Or you might hear:</p>
<blockquote>
<p>It’s conceptually simple.</p>
</blockquote>
<p>Here’s something that’s conceptually simple:</p>
<blockquote>
<p>Take man from Earth and put him on the Moon.</p>
</blockquote>
<p>You just want to move a person from one place to another. What’s the problem? Simple right?</p>]]></description>
    <pubDate>Sat, 25 Jul 2015 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2015-07-25-developing-software-is-not-easy.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>

    </channel>
</rss>

<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>BabylonCandle</title>
        <link>http://blog.ssanj.net</link>
        <description><![CDATA[The blog of Sanjiv Sahayam]]></description>
        <atom:link href="http://blog.ssanj.net/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Thu, 03 Mar 2016 00:00:00 UT</lastBuildDate>
        <item>
    <title>How to Move Back and Forward through your Edit History with Sublime Text</title>
    <link>http://blog.ssanj.net/posts/2016-03-03-how-to-move-back-and-forward-through-your-edit-history-with-sublime-text.html</link>
    <description><![CDATA[<p>When using Sublime Text as your IDE, it’s pretty useful to be able to move through the history of your edits. I went looking for a plugin to do this on <a href="https://packagecontrol.io">Package Control</a> (as you do) but then <a href="https://packagecontrol.io/packages/Edit%20History">found out that this feature is inherently supported</a> in <a href="http://www.sublimetext.com/3">Sublime Text 3</a>.</p>
<div class="figure">
<img src="/images/sublime-jump-back-and-forward-through-history.jpg" alt="Jumping back and forward" />
<p class="caption">Jumping back and forward</p>
</div>
<p>If you want to change the key bindings, click on <strong>Preferences &gt; Key Bindings - User</strong> and add your key mappings. Here’s an example that uses ALT + COMMAND + LEFT and ALT + COMMAND + RIGHT to move back and forward through history respectively:</p>
<pre class="command scrollx"><code>    { &quot;keys&quot;: [&quot;alt+super+left&quot;], &quot;command&quot;: &quot;jump_back&quot; },
    { &quot;keys&quot;: [&quot;alt+super+right&quot;], &quot;command&quot;: &quot;jump_forward&quot; }</code></pre>]]></description>
    <pubDate>Thu, 03 Mar 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-03-03-how-to-move-back-and-forward-through-your-edit-history-with-sublime-text.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How to Run a Specific Main Class with Parameters through SBT</title>
    <link>http://blog.ssanj.net/posts/2016-03-02-how-to-run-a-specific-main-class-with-parameters-through-sbt.html</link>
    <description><![CDATA[<p>Say you’ve got a number of main classes in your SBT project. Issuing a</p>
<pre class="command scrollx"><code>&gt; run</code></pre>
<p>from SBT in <a href="http://www.scala-sbt.org/0.13.5/docs/Howto/interactive.html">interactive mode</a> will display a menu with options to run one of the many main classes detected:</p>
<pre class="terminal scrollx"><code> [1] net.ssanj.stm.refs.OneOfTwoValuesChangedAfterOneRead
 [2] net.ssanj.stm.tmap.AReadValueHasChangesAndAnotherKeyIsRead
 [3] net.ssanj.stm.tmap.AReadValueHasChangesAndIsReadAgain
 [4] net.ssanj.stm.tmap.AReadValueHasChangesNothingElseIsRead
 [5] net.ssanj.stm.tmap.AValueIsReadAndAnotherValueIsAdded
 [6] net.ssanj.stm.tmap.LostUpdateAdditionalRead
 [7] net.ssanj.stm.tmap.LostUpdateNoAdditionalRead
 [8] net.ssanj.stm.tmap.RetainTest
 [9] net.ssanj.stm.tmap.ThrowsException</code></pre>
<p>You can also do the same from the command line with:</p>
<pre class="terminal scrollx"><code>sbt run</code></pre>
<p>What if you needed to run a specific class but with some parameters? You can use:</p>
<pre class="command scrollx"><code>&gt; runMain package.path.to.main.class param1 param2</code></pre>
<p>or</p>
<pre class="command scrollx"><code>&gt; run-main package.path.to.main.class param1 param2</code></pre>
<p>in interactive mode.</p>
<p>To run from the command line you can use:</p>
<pre class="terminal scrollx"><code>sbt &quot;runMain package.path.to.main.class param1 param2&quot;</code></pre>
<p>or</p>
<pre class="terminal scrollx"><code>sbt &quot;run-main package.path.to.main.class param1 param2&quot;</code></pre>
<p>Although the above methods work, they are a bit tedious because you have to copy the full class path to the class you want to run. It would be nice to run a main class directly through menu with the some parameters. Something of the sort:</p>
<pre class="command scrollx"><code>&gt; run
 [1] net.ssanj.stm.refs.OneOfTwoValuesChangedAfterOneRead
 [2] net.ssanj.stm.tmap.AReadValueHasChangesAndAnotherKeyIsRead
 [3] net.ssanj.stm.tmap.AReadValueHasChangesAndIsReadAgain
 [4] net.ssanj.stm.tmap.AReadValueHasChangesNothingElseIsRead
 [5] net.ssanj.stm.tmap.AValueIsReadAndAnotherValueIsAdded
 [6] net.ssanj.stm.tmap.LostUpdateAdditionalRead
 [7] net.ssanj.stm.tmap.LostUpdateNoAdditionalRead
 [8] net.ssanj.stm.tmap.RetainTest
 [9] net.ssanj.stm.tmap.ThrowsException

&gt; 2 &quot;param1 param2&quot;</code></pre>]]></description>
    <pubDate>Wed, 02 Mar 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-03-02-how-to-run-a-specific-main-class-with-parameters-through-sbt.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Embrace the Unfamiliar</title>
    <link>http://blog.ssanj.net/posts/2016-03-02-embrace-the-unfamiliar.html</link>
    <description><![CDATA[<p>Often when we are faced with a new concept or a completely new idea, we decide “this is not for me”. We hate floundering with something new. Why suffer when you already know so many existing things so well?</p>
<p>Most of our learning comes from things that are initially unfamiliar to us. Familiarity breeds complacency. The unfamiliar excites and motivates us to learn beyond our boundaries. This is where we grow.</p>
<p>As <a href="https://twitter.com/jdegoes">John De Goes</a> puts it:</p>
<blockquote class="twitter-tweet" data-lang="en">
<p lang="en" dir="ltr">
Don't confuse familiarity with simplicity. Scary things you don't yet know are sometimes far simpler than the hard things you already know.
</p>
— John A. De Goes (<span class="citation">@jdegoes</span>) <a href="https://twitter.com/jdegoes/status/676478586946097153">December 14, 2015</a>
</blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>I first came across this concept while learning <a href="https://facebook.github.io/react/index.html">React.js</a>. Given the proliferation of Javascript frameworks recently, why would you learn React over <a href="https://angularjs.org">Angular</a> or <a href="http://emberjs.com">Ember</a> or any other framework? Knowing how unfamiliar React is to newcommers, the team <a href="https://facebook.github.io/react/docs/why-react.html">prepares us</a> thus:</p>
<blockquote>
<p>React challenges a lot of conventional wisdom, and at first glance some of the ideas may seem crazy. Give it five minutes while reading this guide; those crazy ideas have worked for building thousands of components both inside and outside of Facebook and Instagram.</p>
</blockquote>
<p>And true enough I found some of the ideas crazy - at least initially. But after heeding their advice, I suspended my cynicism and proceeded to learn a rather nifty framework.</p>
<p>The React guys borrowed this idea from <a href="https://signalvnoise.com/posts/3124-give-it-five-minutes">Give it Five Minutes</a> by <a href="https://twitter.com/jasonfried">Jason Fried</a>. In it he says:</p>
<blockquote>
<p>Dismissing an idea is so easy because it doesn’t involve any work. You can scoff at it. You can ignore it. You can puff some smoke at it. That’s easy. The hard thing to do is protect it, think about it, let it marinate, explore it, riff on it, and try it. The right idea could start out life as the wrong idea.</p>
</blockquote>
<p>So the next time you see something unfamiliar or “crazy”, suspend your disbelief and give it a go. The results may surprise you.</p>]]></description>
    <pubDate>Wed, 02 Mar 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-03-02-embrace-the-unfamiliar.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Running Ammonite on Windows 7 with ConEmu</title>
    <link>http://blog.ssanj.net/posts/2016-02-24-running-ammonite-on-windows-with-conemu.html</link>
    <description><![CDATA[<p>Trying to run <a href="https://github.com/lihaoyi/Ammonite">Ammonite</a> on Windows is a nightmare. Trying to do any useful development on Windows is a huge waste of time. Why would you even bother? Unfortunately while working at a client site I was forced to use Windows. I still needed to install my usual tools, which included Ammonite. After trying to run Ammonite within <a href="https://git-for-windows.github.io">GitBash</a> on <a href="http://conemu.github.io/en">ConEmu</a>, I was greeted with this error:</p>
<pre class="terminal scrollx"><code>error] (run-main-0) java.lang.RuntimeException: Nonzero exit value: 1
java.lang.RuntimeException: Nonzero exit value: 1
        at scala.sys.package$.error(package.scala:27)
        at scala.sys.process.ProcessBuilderImpl$AbstractBuilder.slurp(ProcessBuilderImpl.scala:132)
        at scala.sys.process.ProcessBuilderImpl$AbstractBuilder.$bang$bang(ProcessBuilderImpl.scala:102)
        at ammonite.terminal.TTY$.stty(Utils.scala:95)
        at ammonite.terminal.TTY$.init(Utils.scala:74)
        at ammonite.terminal.TermCore$.x$7$lzycompute$1(TermCore.scala:297)
        at ammonite.terminal.TermCore$.x$7$1(TermCore.scala:297)
        at ammonite.terminal.TermCore$.initialConfig$lzycompute$1(TermCore.scala:297)
        at ammonite.terminal.TermCore$.initialConfig$1(TermCore.scala:297)
        at ammonite.terminal.TermCore$.readLine(TermCore.scala:307)
        at ammonite.repl.frontend.AmmoniteFrontEnd.readLine(AmmoniteFrontEnd.scala:114)
        at ammonite.repl.frontend.AmmoniteFrontEnd.action(AmmoniteFrontEnd.scala:26)
        at ammonite.repl.Repl.action(Repl.scala:56)
        at ammonite.repl.Repl.loop$1(Repl.scala:89)
        at ammonite.repl.Repl.run(Repl.scala:107)
        at ammonite.repl.Main$.run(Main.scala:135)
        at ammonite.repl.Main$$anonfun$main$2.apply(Main.scala:82)
        at ammonite.repl.Main$$anonfun$main$2.apply(Main.scala:81)
        at scala.Option.foreach(Option.scala:257)
        at ammonite.repl.Main$.main(Main.scala:81)
        at ammonite.repl.Main.main(Main.scala)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)</code></pre>
<p>After a little digging around I found the <a href="https://github.com/lihaoyi/Ammonite/issues/119">Ammonite-REPL doesn't work on Windows</a> issue in the issue tracker. Oh noes!! But I had to have some Ammonite power for what I was working on. One of comments on the issue by <a href="https://github.com/avakhrenev">avakhrenev</a> mentioned that swapping out the default frontend in the <a href="https://github.com/lihaoyi/Ammonite/blob/86525283be1be5896c1a6488b98ce47581005349/repl/src/main/scala/ammonite/repl/Repl.scala#L20-L22">Repl.scala</a> class to JLineWindows seemed fix the problem.</p>
<p>After cloning the Ammonite project, I updated frontend in the repl/src/main/scala/ammonite/repl/Repl.scala file as follows:</p>
<div class="sourceCode"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span class="kw">val</span> frontEnd = Ref[FrontEnd](ammonite.<span class="fu">repl</span>.<span class="fu">frontend</span>.<span class="fu">FrontEnd</span>.<span class="fu">JLineWindows</span>)</code></pre></div>
<p>I then tested it through sbt with:</p>
<pre class="command scrollx"><code>sbt repl/run</code></pre>
<p>The workaround had fixed the issue! Yay!</p>
<p>I proceeded to build the patched version of Ammonite with:</p>
<pre class="command scrollx"><code>sbt repl/assembly</code></pre>
<p>I then copied the generated executable into my bin directory:</p>
<pre class="terminal"><code>cp repl/target/scala-2.11/ammonite-repl-0.5.6-SNAPSHOT-2.11.7 ~/bin/amm</code></pre>
<p>And now I can run amm as per usual on Windows.</p>
<div class="figure">
<img src="/images/ammonite_on_windows7_conemu.png" alt="Ammonite on Windows" />
<p class="caption">Ammonite on Windows</p>
</div>]]></description>
    <pubDate>Wed, 24 Feb 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-02-24-running-ammonite-on-windows-with-conemu.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Scala Class Hierarchy</title>
    <link>http://blog.ssanj.net/posts/2016-02-07-scala-class-hierarchy.html</link>
    <description><![CDATA[<p>As the <a href="http://www.artima.com/pins1ed/images/scalaHierarchy.jpg">Scala Class Hierarchy</a> is quite hard to read/look at, I thought I’d have a crack at simplifying it somewhat. Also of note is that the scala.ScalaObject super type no longer exists as of scala 2.10.</p>
<div class="figure">
<img src="/images/scala_class_hierarchy.png" alt="scala class hierarchy" />
<p class="caption">scala class hierarchy</p>
</div>]]></description>
    <pubDate>Sun, 07 Feb 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-02-07-scala-class-hierarchy.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>2 Devs Podcast Discusses Agile is the New Waterfall</title>
    <link>http://blog.ssanj.net/posts/2016-01-28-2-devs-podcast-discusses-agile-is-the-new-waterfall.html</link>
    <description><![CDATA[<p>In this week’s episode we discuss the article <a href="https://medium.com/swlh/agile-is-the-new-waterfall-f7baef5d026d#.gsly4byrx">Agile is the New Waterfall by Ayasin</a>. Have a read of the article before jumping into this week’s episode.</p>
<h2 id="agile">Agile</h2>
<ol style="list-style-type: decimal">
<li>For an introduction into Agile principles have a read of <a href="http://www.agilemanifesto.org/">The Agile Manifesto</a>.</li>
<li><a href="http://www.martinfowler.com/articles/itsNotJustStandingUp.html">It’s Not Just Standing Up: Patterns for Daily Standup Meetings by Jason Yip</a> is a nice primer for better standups in general.</li>
<li>For an introduction to Agile planning read <a href="https://dzone.com/articles/introduction-planning-poker">An Introduction to Planning Poker</a>.</li>
</ol>
<h2 id="wiki">Wiki</h2>
<ol style="list-style-type: decimal">
<li>Read <a href="http://pm.stackexchange.com/questions/2780/how-to-organize-knowledge-within-a-wiki">How to organise knowledge within a wiki?</a> and <a href="https://theglenncogar.wordpress.com/2016/01/27/wiki-how-to-structure-your-content/">Wiki: How to structure your content</a> for some ideas on how to structure your wiki content.</li>
<li><a href="https://www.atlassian.com/software/confluence">Confluence</a> is an enterprise Wiki from Atlassian.</li>
</ol>
<p>If you liked the episode or just have some feedback please leave a comment here or contact us on twitter <a href="https://twitter.com/@ssanj">@ssanj</a> or <a href="https://twitter.com/@nippysaurus">@nippysaurus</a>.</p>
<iframe class="movie" width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/244224119&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true">
</iframe>]]></description>
    <pubDate>Thu, 28 Jan 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-01-28-2-devs-podcast-discusses-agile-is-the-new-waterfall.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Play Application Fails to Start with play&period;crypto&period;secret Parameter on Linux with Bash</title>
    <link>http://blog.ssanj.net/posts/2016-01-27-play-application-fails-to-start-with-play-crypto-secret-parameter-on-linux-with-bash.html</link>
    <description><![CDATA[<p><a href="https://playframework.com/documentation/2.4.x/Production">The playframework production documentation</a> states that one of the ways to pass the application secret to your application is through a system variable:</p>
<pre class="terminal scrollx"><code>java -jar target/scala-2.XX/&lt;yourprojectname&gt;-assembly-&lt;version&gt;.jar -Dplay.crypto.secret=abcdefghijk</code></pre>
<p>The recommended way to <a href="https://playframework.com/documentation/2.4.x/ApplicationSecret">generate the application secret</a> is by running:</p>
<pre class="command scrollx"><code>sbt playGenerateSecret</code></pre>
<p>Now if the secret generated contains a backtick like so:</p>
<pre class="terminal scrollx"><code>QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n</code></pre>
<p>You’re in for a rude surprise when you try to start your application in a Bash shell:</p>
<pre class="terminal scrollx"><code>java -jar target/scala-2.XX/&lt;yourprojectname&gt;-assembly-&lt;version&gt;.jar -Dplay.crypto.secret=&quot;QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n&quot;</code></pre>
<p>The result with be a prompt indicating that you need to close the backtick:</p>
<pre class="terminal"><code>&gt;</code></pre>
<p>instead of starting the application. <em>Backticks are used for <a href="http://www.tldp.org/LDP/Bash-Beginners-Guide/html/sect_03_04.html#sect_03_04_04">command expansion</a> in Bash.</em></p>
<p>Now there are a couple of ways to workaround this:</p>
<ol style="list-style-type: decimal">
<li>Escape the backtick:</li>
</ol>
<pre class="terminal scrollx"><code>QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB\`R5W:1uDFN];Ik@n</code></pre>
<ol start="2" style="list-style-type: decimal">
<li>Replace it with a single quote:</li>
</ol>
<pre class="terminal scrollx"><code>QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB&#39;R5W:1uDFN];Ik@n</code></pre>
<ol start="3" style="list-style-type: decimal">
<li>Remove the backtick:</li>
</ol>
<pre class="terminal scrollx"><code>QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241ABR5W:1uDFN];Ik@n</code></pre>
<p>One thing to keep in mind with other Shells is that any special characters generated by the secret generator will probably have the same issues as Bash does.</p>]]></description>
    <pubDate>Wed, 27 Jan 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-01-27-play-application-fails-to-start-with-play-crypto-secret-parameter-on-linux-with-bash.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How to Install El Capitan on a New SSD</title>
    <link>http://blog.ssanj.net/posts/2016-01-21-how-to-install-el-capitan-on-a-new-ssd.html</link>
    <description><![CDATA[<ol style="list-style-type: decimal">
<li>Download El Capitan installation from the App store. It might complain that you already have it installed but download it anyway. It will be downloaded to <strong>/Applications</strong> and be named <strong>Install OS X El Capitan.app</strong></li>
<li><a href="https://support.apple.com/en-au/HT201372">Create a bootable image from the El Capitan installer</a> on a USB stick larger than 6GB. In a terminal run:</li>
</ol>
<pre class="terminal scrollx"><code>sudo /Applications/Install\ OS\ X\ El\ Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume --applicationpath /Applications/Install\ OS\ X\ El\ Capitan.app</code></pre>
<p><em>where MyVolume is the name of your USB stick. Change this to match the name of your USB stick.</em></p>
<ol start="3" style="list-style-type: decimal">
<li>Physically install SSD into the target laptop.</li>
<li>Insert the El Capitan USB stick into the target laptop and power up. (<em>This might take a while.</em>)</li>
<li>When the menu finally turns up, choose <strong>Disk Utility</strong> and format the SSD as <strong>Mac OS Extended (Journaled)</strong> with a unique name.</li>
<li>Once complete, exit from <strong>Disk Utility</strong> and return the main menu.</li>
<li>Choose to <strong>Install OS X</strong> on the formatted SSD.</li>
<li>Follow the prompts until El Capitan is installed.</li>
</ol>
<p><a href="https://www.youtube.com/watch?v=F82ThP-6jeA">Here’s link to a video on how to physically install the SSD as well as run the software installation</a>.</p>
<p>If you’d rather install Yosemite on the SSD then follow the <a href="http://sanj.ink/posts/2015-07-12-how-to-instal-yosemite-on-a-new-ssd.html">How to Install Yosemite on a New SSD</a> guide.</p>]]></description>
    <pubDate>Thu, 21 Jan 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-01-21-how-to-install-el-capitan-on-a-new-ssd.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Scoverage Breaks with java.lang.No Class Def Found Error&colon; scoverage &sol; Invoker&dollar;</title>
    <link>http://blog.ssanj.net/posts/2016-01-14-scoverage-breaks-with-java-lang-NoClassDefFoundError-scoverage-Invoker.html</link>
    <description><![CDATA[<p>If you’ve been using <a href="https://github.com/scoverage/sbt-scoverage">Scoverage</a> with <a href="http://www.scala-sbt.org">SBT</a> to get some code coverage on your Scala code, you may come across an error while trying to run a main class on instrumentation turned on:</p>
<div class="sourceCode"><pre class="sourceCode scala scrollx"><code class="sourceCode scala">java.<span class="fu">lang</span>.<span class="fu">NoClassDefFoundError</span>: scoverage/Invoker$</code></pre></div>
<p>This is quite puzzling as the tests run fine. I came across a possible <a href="https://github.com/scoverage/sbt-scoverage/issues/84">Github issue</a> while hunting around for a solution. It sounds like there is a runtime dependency on Scoverage classes.</p>
<p>One way to overcome this issue, is to turn off coverage when running your main class through SBT:</p>
<pre class="terminal scrollx"><code>;clean;coverageOff;run</code></pre>
<p>If you’re running SBT externally you can use:</p>
<pre class="terminal scrollx"><code>sbt clean coverageOff run</code></pre>
<p>When you want your coverage back on for your tests, you can use:</p>
<pre class="terminal scrollx"><code>;clean;coverage;test</code></pre>
<p>Or externally:</p>
<pre class="terminal scrollx"><code>sbt clean coverage test</code></pre>
<p><a href="https://github.com/alexflav23">@alexflav23</a> recommends turning off coverage when publishing or packaging:</p>
<blockquote>
<p>You need to disable coverage with coverageOff before publishing or packaging and everything will be just fine. I’ve ran into this issue myself and that was the quick fix.</p>
</blockquote>]]></description>
    <pubDate>Thu, 14 Jan 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-01-14-scoverage-breaks-with-java-lang-NoClassDefFoundError-scoverage-Invoker.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How to be a High Performer</title>
    <link>http://blog.ssanj.net/posts/2016-01-14-how-to-be-a-high-performer.html</link>
    <description><![CDATA[<p>We all want to be the best we can be. We are constantly pushing ourselves to do more. Be more. We can often forget to rest between one challenging task and the next. We still have so much further to go to reach our goal. Resting is for the weak right?</p>
<p>I was recently reading a <a href="https://medium.com">Medium</a> article that came up with a nice analogy for this. I couldn’t find the article again to reference it so I’ll paraphrase:</p>
<blockquote>
<p>Even when you’re pushing yourself in the gym, you still stop between sets to take a break. No one turns up and does a hundred sets without any breaks. That would just lead to massive muscle fatigue and serious side effects. You would not get stronger over time. You’d probably tear a muscle or worse.</p>
</blockquote>
<p>We can also apply this principle to our daily lives. Work hard. Then take a breather. You’ll find that just like with your muscles, this practice of resting will make your mind and your motivation grow stronger over time.</p>]]></description>
    <pubDate>Thu, 14 Jan 2016 00:00:00 UT</pubDate>
    <guid>http://blog.ssanj.net/posts/2016-01-14-how-to-be-a-high-performer.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>

    </channel>
</rss>

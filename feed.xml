<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>BabylonCandle</title>
        <link>https://blog.ssanj.net</link>
        <description><![CDATA[The blog of Sanjiv Sahayam]]></description>
        <atom:link href="https://blog.ssanj.net/feed.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 24 May 2023 00:00:00 UT</lastBuildDate>
        <item>
    <title>Thanks for the Feedback - Douglas Stone & Sheila Heen</title>
    <link>https://blog.ssanj.net/posts/2023-05-24-thanks-for-the-feedback-douglas-stone-sheila-heen.html</link>
    <description><![CDATA[<p>Ideas from the book <a href="https://www.amazon.com.au/Thanks-Feedback-Science-Receiving-Well/dp/0670922633/">Thanks for the Feedback</a></p>
<ul>
<li>Our need for acceptance and our need to improve are both affected by feedback. Often these are competing needs.</li>
<li>Actively seeking out feedback in a work environment can lead to significant positive gains if handled properly.</li>
<li>Our inherent triggers are barriers to us hearing feedback, accepting it and learning from it.</li>
<li>Try to ensure that you understand feedback before accepting or rejecting it.</li>
</ul>
<h2 id="types-of-feedback">Types of Feedback</h2>
<table>
<thead>
<tr class="header">
<th>Type of Feedback</th>
<th>Giver’s Purpose</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Appreciation</td>
<td>Thank, motivate and connect</td>
</tr>
<tr class="even">
<td>Coaching</td>
<td>Improve capabilities and identify blind spots</td>
</tr>
<tr class="odd">
<td>Evaluation</td>
<td>Rating or decision making</td>
</tr>
</tbody>
</table>
<ul>
<li>Ensure you know which type of feedback is being given.</li>
<li>Explicitly ask for the type that you are after to avoid confusion.</li>
<li>If you’re giving feedback check with the receiver that the feedback is being received in the type requested.</li>
<li>Clarify what the feedback means without jumping into conclusions See <a href="#additional-prompts">Additional Prompts</a></li>
<li>Feedback is subjective to the person giving it. It’s shaped by their experiences and temperament. Ask for examples. Find out what “good” looks like in the future.</li>
<li>All feedback is Data + Judgement call (based on their experience of the world) -&gt; Label -&gt; Future consequences (as they see it)</li>
</ul>
<h2 id="how-others-see-your-actions">How Others see your Actions</h2>
<h3 id="the-gap-map">The Gap Map</h3>
<p><img src="/images/2023-05-24-thanks-for-the-feedback-douglas-stone-sheila-heen/the-gap-map-2023-05-24-2137.png" width="600" /></p>
<ul>
<li>We focus on our intentions in a situation. Others focus on the effect our actions have on them in the same situation.</li>
<li>We blame the situation for our failure. Others blame our character for the failure.</li>
<li>We downplay our emotions in a situation while others experience them in an amplified way.</li>
</ul>
<h2 id="blind-spots">Blind Spots</h2>
<ul>
<li>You can get honest feedback from someone that dislikes you or with someone you don’t get along with.</li>
<li>Ask the people you have the hardest time with to give you feedback.</li>
<li>Discuss separate topics separately. Identify the different streams and call them out. Focus on one stream at a time.</li>
<li>Each of us only sees one side of the problem.</li>
<li>Each of us is involved in the problem to different degrees.</li>
<li>Notice if you are reacting to the other person.</li>
<li>The three issues of a relationship system:
<ol type="1">
<li>Differences - Are the difference between us causing problems?</li>
<li>Roles - Is this a result of the roles we play?</li>
<li>Processes - Are processes, politics, physical environment etc making the problem worse?</li>
</ol></li>
</ul>
<blockquote>
<p>when it comes to stories about yourself, you get what you Google</p>
</blockquote>
<ul>
<li>Look for the good or look for the bad. You’ll always find something to answer you query.</li>
</ul>
<h2 id="feedback">Feedback</h2>
<ul>
<li>How you perceive feedback is based on three things:
<ul>
<li>Baseline - how happy or sad are we generally</li>
<li>Swing - How far off the base line are you pushed by positive or negative events</li>
<li>Sustain and Recovery - How long are you pushed away from your baseline due to a positive or negative event?</li>
</ul></li>
</ul>
<p>Feedback Quadrant</p>
<table>
<tr>
<th>
</th>
<th scope="col">
Long Sustain of Positive
</th>
<th scope="col">
Short Sustain of Positive
</th>
</tr>
<tr>
<th scope="row">
Quick Recovery from Negative
</th>
<td>
Low risk, high reward. “I love feedback”
</td>
<td>
Low risk, low reward. “No big deal either way”
</td>
</tr>
<tr>
<th scope="row">
Slow Recovery from Negative
</th>
<td>
High risk, high reward. “I’m hopeful but fearful”
</td>
<td>
High risk, low reward. “I hate feedback”
</td>
</tr>
</table>
<p><img src="/images/2023-05-24-thanks-for-the-feedback-douglas-stone-sheila-heen/feedback-quadrant-2023-05-24-2112.png" width="800" /></p>
<ul>
<li>We can extend the positive feelings we get from positive feedback by recalling it regularly from memory.</li>
<li>Feelings exaggerate feedback.</li>
<li>Figure out how you typically react to feedback (do you get defensive or appreciative?)</li>
<li>Check in with yourself during a feedback session to see how you are doing.</li>
<li>Notice how you embellish the story.</li>
<li>Things to keep in mind:
<ul>
<li><strong>Time</strong> - The present doesn’t change the past and <strong>may</strong> determine the future.</li>
<li><strong>Specificity</strong> - Being bad at one thing does not make you bad at everything. Just because you’re bad at something now, doesn’t mean you’ll always be bad at it.</li>
<li><strong>People</strong> - Just because one person doesn’t like us doesn’t mean that everyone doesn’t like us. People’s views change over time.</li>
</ul></li>
<li>Our predictions of the future are often wrong.</li>
<li>Imagine the feedback is not about you but of someone else. What advice would you give that person on how to respond?</li>
<li>Ask: “How significant this feedback would be X years from now?”</li>
</ul>
<blockquote>
<p>Tragedy + Time = Comedy</p>
</blockquote>
<ul>
<li>See your life as an amusing play. Don’t take everything so seriously.</li>
<li>You can’t control what other people think of you.</li>
</ul>
<h2 id="second-score">Second Score</h2>
<p>The first score is the feedback itself. The second is the score you give yourself for handling the feedback, and your subsequent improvements (if any).</p>
<h2 id="setting-boundaries">Setting Boundaries</h2>
<ul>
<li>Set limits on feedback. You can dictate the time, frequency or say no to the way it’s delivered.</li>
</ul>
<blockquote>
<p>Unhelpful feedback is useless: relentless unhelpful feedback is destructive</p>
</blockquote>
<ul>
<li>If the person doesn’t care about the effect of feedback on you or is not listening, then there is something wrong with the dynamic.</li>
<li>Let the person giving you feedback know the kind of feedback you do want.</li>
<li>Use <code>And</code> instead of <code>But</code>. <code>And</code> signifies that two things are true not just one.</li>
</ul>
<blockquote>
<p>I have been afraid to talk to you about this <em>and</em> it’s important to me to be honest with you</p>
</blockquote>
<ul>
<li>The <a href="https://en.wikipedia.org/wiki/J_curve">J curve</a>: A J curve is any of a variety of J-shaped diagrams where a curve initially falls, then steeply rises above the starting point.</li>
</ul>
<blockquote>
<p>Things might get worse before they get better.</p>
</blockquote>
<p><img src="/images/2023-05-24-thanks-for-the-feedback-douglas-stone-sheila-heen/jcurve-2023-05-24-0940.png" width="350"
/></p>
<ul>
<li>Try on different feedback for a while (eg. A couple of weeks). If it’s not working discard it.</li>
<li>Make it easy for people to give you feedback. Don’t demand that it be delivered in a specific way.</li>
<li>Feedback should be specific doing your current job more effectively.</li>
<li>Have a balanced view.</li>
</ul>
<p>Ask:</p>
<blockquote>
<p>What’s wrong with this feedback?</p>
</blockquote>
<p>Then ask:</p>
<blockquote>
<p>What’s right about this feedback?</p>
</blockquote>
<ul>
<li>You don’t always have to accept feedback.</li>
<li>Encourage people to think about the feedback and their second score.</li>
<li>Ask people to coach you on how to give better feedback.</li>
</ul>
<h2 id="additional-prompts">Additional Prompts</h2>
<ul>
<li>Can you give me an example?</li>
<li>Can you help me understand your feedback?</li>
<li>What did that mean to you?</li>
<li>What do you see that’s getting in my own way?</li>
<li>How did that impact you?</li>
<li>What’s most upsetting to you and why?</li>
<li>What could I do to help me improve?</li>
<li>What am I contributing to the problem between us?</li>
<li>What does this mean for me?</li>
<li>What will happen next?</li>
<li>What is expected of me?</li>
<li>Given where I am now, what should I do next?</li>
<li>I wonder if this feedback sits in my blind spot?</li>
<li>Have I heard this feedback before?</li>
<li>What will happen if I follow this feedback?</li>
<li>Is this about helping me grow and improve?</li>
<li>Is this something about our relationship dynamics?</li>
<li>What do I feel?</li>
<li>What’s the story I am telling?</li>
<li>What’s the actual feedback?</li>
<li>What is the feedback not about?</li>
</ul>]]></description>
    <pubDate>Wed, 24 May 2023 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2023-05-24-thanks-for-the-feedback-douglas-stone-sheila-heen.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Change Cockpit Launch Port on Ubuntu Server</title>
    <link>https://blog.ssanj.net/posts/2023-03-22-change-copilot-launch-port-on-ubuntu-server.html</link>
    <description><![CDATA[<p><a href="https://cockpit-project.org/">Cockpit</a> runs on the popular port 9090. Chances are that you are going to have a port conflict if you have a couple of other services running. This will lead to Cockpit failing to start.</p>
<p>If you suspect this is the case you can verify it by running:</p>
<pre class="terminal scrollx"><code>sudo systemctl status cockpit.socket</code></pre>
<p>or by tailing the syslog:</p>
<pre class="terminal scrollx"><code>tail /var/log/syslog</code></pre>
<p>If you do see any errors about Cockpit not starting due to a port conflict, it’s quite easy to rectify. These instructions are for Ubuntu Server Jammy (22.04.2).</p>
<ol type="1">
<li>Create or edit the <code>/etc/systemd/system/cockpit.socket.d/listen.conf</code> file</li>
<li>Change the <code>ListenStream</code> option to match your required port</li>
</ol>
<p>The default option will be similar to:</p>
<pre class="config scrollx"><code>[Socket]
ListenStream=
ListenStream=443</code></pre>
<p>Change it to match your required port:</p>
<pre class="config scrollx"><code>[Socket]
ListenStream=
ListenStream=&lt;YOUR_NEW_PORT&gt;</code></pre>
<p>Note: the empty <code>ListenStream=</code> directive is needed to reset the previous value of this field. You can find more information about this on the <a href="https://cockpit-project.org/guide/latest/listen">Cockpit documentation</a></p>
<ol start="3" type="1">
<li>Finally, restart the services to make the change take effect:</li>
</ol>
<pre class="terminal scrollx"><code>sudo systemctl daemon-reload
sudo systemctl restart cockpit.socket</code></pre>]]></description>
    <pubDate>Wed, 22 Mar 2023 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2023-03-22-change-copilot-launch-port-on-ubuntu-server.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Docker Compose Fails with Network Has Active Endpoints Error</title>
    <link>https://blog.ssanj.net/posts/2023-03-13-docker-compose-fails-with-network-has-active-endpoints-error.html</link>
    <description><![CDATA[<p>While running <code>docker compose down</code> on a docker compose stack, I came across this error:</p>
<blockquote>
<p>network <ID> has active endpoints</p>
</blockquote>
<p>Now if I listed the docker networks with:</p>
<pre class="terminal scrollx"><code>docker network ls</code></pre>
<p>I could see the offending network listed:</p>
<pre class="terminal scrollx"><code>NETWORK ID     NAME                           DRIVER    SCOPE
2222a222222a   &lt;OFFENDING NETWORK NAME&gt;       bridge    local</code></pre>
<p>Now I could probably fix this by removing the offending network with:</p>
<pre class="terminal scrollx"><code>docker network rm &lt;OFFENDING NETWORK NAME&gt;</code></pre>
<p>A quick <a href="https://stackoverflow.com/questions/42842277/docker-compose-down-default-network-error">Google</a> pointed me in the right direction to get things working as expected. The network I was trying to remove was being used by an orphaned container.</p>
<p>Running the following fixed the issue:</p>
<pre class="terminal scrollx"><code>docker compose down --remove-orphans</code></pre>
<p>This can occur if you run <code>docker run</code> or equivalent without the <code>--rm</code> parameter, where container is not removed after the command exits.</p>]]></description>
    <pubDate>Mon, 13 Mar 2023 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2023-03-13-docker-compose-fails-with-network-has-active-endpoints-error.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How To Connect The Brother Hl-2170W To Wifi on macOSX</title>
    <link>https://blog.ssanj.net/posts/2023-01-11-how-to-connect-the-brother-hl-2170w-to-wifi.html</link>
    <description><![CDATA[<p>I recently wanted to connect my <a href="https://support.brother.com/g/b/spec.aspx?c=us&amp;lang=en&amp;prod=hl2170w_all">Brother HL-2170W</a> laser printer to my Wifi network. I had always used the wired Ethernet
connection prior. The <a href="https://support.brother.com/g/s/id/htmldoc/printer/cv_hl2140/eng/html/nug/index.html">Network User’s Guide</a> mentioned installing a Brother application to configure the printer to use Wifi:</p>
<blockquote>
<p>To connect your printer to your wireless network, you need to follow the steps in the Quick Setup Guide or the Network User’s Guide. We recommend that you use the Brother installer application on the CD-ROM which we have provided with the printer. By using this application, you can easily connect your printer to your wireless network and install the network software and printer driver which you need to complete the configuration of your printer for a wireless network. You will be guided by the on-screen instructions until you are able to use your Brother wireless network printer.</p>
</blockquote>
<p>Have a read of the <a href="https://support.brother.com/g/s/id/htmldoc/printer/cv_hl2140/eng/html/index.html">HL-2170W manual</a> for more specific information.</p>
<p>Given how old this printer was, I didn’t fancy my chances of getting their software to work on the current version of macOSX (12.6.3). Also MacBooks have not shipped with a CD-ROM for many years, so using the CD-ROM was not a viable option. I also didn’t see the utility mentioned available for download on their download site, so that was a no go. :|</p>
<p>Most network printers have some sort of web admin application where you can update settings. I hit the IP address of the
printer in a browser: <code>http://printer_ip_address</code> and was greeted by an admin panel:</p>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-admin-panel.png" alt="Admin Panel" />
<figcaption aria-hidden="true">Admin Panel</figcaption>
</figure>
<p>If you don’t know what the IP address of your printer is you have two options:</p>
<ol type="1">
<li>Find the DHCP address of your printer from your Router. This is assuming that the printer is using DHCP from your router.</li>
<li>Press the “Go” button (the big white button on the bottom left side of your printer) three times and the printer should printer out
a bunch of statistics about the printer along with its IP address.</li>
</ol>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/go-button.png" alt="Go Button" />
<figcaption aria-hidden="true">Go Button</figcaption>
</figure>
<h2 id="update-the-admin-and-user-passwords">Update the admin and user Passwords</h2>
<p>The default admin credentials to the admin settings (red key) are:</p>
<ul>
<li>login: admin</li>
<li>password: access</li>
</ul>
<p>The default user credentials to the user settings (green key) are:</p>
<ul>
<li>login: user</li>
<li>password: access</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-key-settings.png" alt="Setting Types" />
<figcaption aria-hidden="true">Setting Types</figcaption>
</figure>
<p>It’s a good idea to change the above credentials to something stronger.</p>
<p>One issue I ran across when entering long or complex passwords (over 20 alphanumeric and symbolic characters), was that the system would accept it but you would not be able to log into the admin with those updated credentials. Boo! If this happens you will need to reset your printer to factory defaults. See <a href="#reset-printer-to-factory-defaults">Reset Printer to Factory Defaults</a> for details.</p>
<p>What seems to work best is a short alphanumeric password. I tried up to seven characters and left it at that. It may support higher lengths but given that I had already had to reset my printer multiple times, I chose to stop there.</p>
<p>While this is not great, it’s better than the default combinations.</p>
<h2 id="update-firmware">Update Firmware</h2>
<p>Next it would be good to update the printer to its latest firmware to get any bug fixes and security patches etc.</p>
<p>You can download the latest (1.17 as of writing this) from <a href="https://support.brother.com/g/b/downloadtop.aspx?c=au&amp;lang=en&amp;prod=hl2170w_all">Brother’s 2170W Downloads page</a>. Please choose the OS version you want to download the firmware for.</p>
<p>For macOSX, the latest macOSX version is <a href="https://support.brother.com/g/b/downloadlist.aspx?c=au&amp;lang=en&amp;prod=hl2170w_all&amp;os=10060">10.15.x</a>. It seemed to work on macOSX 12.6.3 without a hitch.</p>
<h2 id="activate-wifi">Activate Wifi</h2>
<ul>
<li>Log into the admin panel as the admin user</li>
<li>Choose the <code>Network Configuration</code> link</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-admin-panel-choose-network-configuration.png" alt="Network Configuration" />
<figcaption aria-hidden="true">Network Configuration</figcaption>
</figure>
<ul>
<li>Choose the <code>Wireless</code> interface</li>
<li>Verify that the Wireless interface is <code>Inactive</code></li>
<li>Choose the <code>Configure Wireless</code> link</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-admin-panel-wireless-network-configuration.png" alt="Configure Wireless" />
<figcaption aria-hidden="true">Configure Wireless</figcaption>
</figure>
<ul>
<li>Choose the following settings:</li>
</ul>
<table>
<colgroup>
<col style="width: 35%" />
<col style="width: 23%" />
<col style="width: 41%" />
</colgroup>
<thead>
<tr class="header">
<th>Setting</th>
<th>Value</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Communication Mode</td>
<td><code>Infrastructure Mode</code></td>
<td>-</td>
</tr>
<tr class="even">
<td>Wireless Network Name (SSID)</td>
<td>-</td>
<td><code>Browse</code> to choose your SSID and channel. This can take a while</td>
</tr>
<tr class="odd">
<td>Authentication Method</td>
<td>WPA/WPA2-PSK</td>
<td>Or your authentication method</td>
</tr>
<tr class="even">
<td>Encryption Mode</td>
<td>AES</td>
<td>or your encryption mode</td>
</tr>
<tr class="odd">
<td>Passphrase</td>
<td><strong>Your Wifi Password</strong></td>
<td>-</td>
</tr>
</tbody>
</table>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-wifi-settings.png" alt="Wifi Settings" />
<figcaption aria-hidden="true">Wifi Settings</figcaption>
</figure>
<ul>
<li>Click <code>Submit</code></li>
<li>Wait for the following message to display:</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-wifi-settings-saved.png" alt="Confirmation-1" />
<figcaption aria-hidden="true">Confirmation-1</figcaption>
</figure>
<ul>
<li>Wait for the second confirmation message to display:</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-wifi-settings-enable-wireless-confirmation.png" alt="Confirmation-2" />
<figcaption aria-hidden="true">Confirmation-2</figcaption>
</figure>
<ul>
<li>Click <code>Yes</code>. This disables your wired Ethernet connection to the printer</li>
<li>Wait for the third confirmation message:</li>
</ul>
<figure>
<img src="/images/how-to-connect-the-brother-h12170w-to-wifi/brother-2170w-wifi-settings-wireless-restart.png" alt="Confirmation-3" />
<figcaption aria-hidden="true">Confirmation-3</figcaption>
</figure>
<ul>
<li>Unplug the Ethernet cable and restart the printer</li>
<li>Give the printer a few minutes to connect to your wireless network</li>
<li>Find the IP address of the printer from your Router</li>
<li>Try and open the admin panel again using your new IP address: <code>http://&lt;wifi_ip_address&gt;</code></li>
</ul>
<p>If you can access the admin panel of the printer you’re all set! Well done! If you can’t see the <a href="#troubleshooting">troubleshooting</a> section.</p>
<p>Once you’re satisfied your printer is working correctly, assign a static IP address to MAC address of your printer’s wireless network card through your router. This ensures that the printer will always get the same IP address.</p>
<h2 id="troubleshooting">Troubleshooting</h2>
<p>If the printer does not turn up as a wireless client on your router’s DHCP lease table, something’s gone wrong! Oh noes!
Since you’ve switched to the Wireless interface, your wired network interface does not work. Your only option is to <a href="#reset-printer-to-factory-defaults">Reset Printer to Factory Defaults</a> and try the steps again, ensuring all your Wifi connection details are correct.</p>
<p>I had to do this number of times so I feel your pain.</p>
<h2 id="reset-printer-to-factory-defaults">Reset Printer to Factory Defaults</h2>
<p>If you need to <a href="https://support.brother.com/g/s/id/htmldoc/printer/cv_hl2140/eng/html/ug/index.html?page=chapter4_3_4.html&amp;search=reset&amp;mySearch=reset">reset your printer</a> to factory defaults by doing the following:</p>
<ol type="1">
<li>Turn off the printer</li>
<li>Make sure that the front cover is closed and the power cord is plugged in</li>
<li>Hold down the Go button as you turn on the power switch. Keep the Go button pressed down until the Toner, Drum and Error LEDs light up. Release the Go button. Make sure that all the LEDs turn off</li>
<li>Press the Go button seven times. Make sure that all the LEDs light up to indicate the print server has been reset to its default settings</li>
</ol>
<h2 id="links">Links</h2>
<ul>
<li><a href="https://discussions.apple.com/thread/7408889">set up a Brother HL2170W to print wireless to Mac book Air</a></li>
</ul>]]></description>
    <pubDate>Wed, 11 Jan 2023 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2023-01-11-how-to-connect-the-brother-hl-2170w-to-wifi.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>macOS Loses Connection To Bluetooth Mouse</title>
    <link>https://blog.ssanj.net/posts/2022-11-16-macos-loses-connection-to-bluetooth-mouse.html</link>
    <description><![CDATA[<p>I am not a big fan of using Bluetooth for connecting to peripherals. They inevitably stop working at some point and
you’re left without a working keyboard or mouse or both.</p>
<p>Recently I suspended my scepticism and purchased the <a href="https://www.logitech.com/en-au/products/mice/lift-vertical-ergonomic-mouse-mac.910-006470.html">Logitech Lift for Mac</a>. I was getting some RSI and wanted to try out this vertical mouse.</p>
<figure>
<img src="/images/macos-loses-connection-to-bluetooth-mouse/logitech-lift-for-mac.png" alt="Logitech Lift for Mac" />
<figcaption aria-hidden="true">Logitech Lift for Mac</figcaption>
</figure>
<p>The mouse is exceptional. It was working really well, until one day, as expected, the mouse could not be detected by macOS (Monterey).</p>
<blockquote>
<p>Curse your sudden but inevitable betrayal!</p>
</blockquote>
<p>Since I knew this day would come, I had a handy wired USB mouse close by. Surprisingly even after disabling and enabling
Bluetooth the mouse would not pair on its previous channel.</p>
<p>I changed channels and finally got the mouse to pair. This was quite annoying as now I had two channels bound to
the same computer. I did some Googling and found that <a href="https://apple.stackexchange.com/questions/251842/how-to-restart-bluetooth-service-from-command-line">killing the Bluetooth daemon</a> seemed to solve the problem. Once the daemon is killed, a new instance is automatically started.</p>
<h2 id="script-it">Script it</h2>
<p>I created a small Bash script to do that. In order to use the script I had use <code>gnu-sed</code> as opposed to the default <code>sed</code> implementation that ships with macOS, because I wanted to do some Regex replacements.</p>
<p>You can install it via <a href="https://brew.sh/">brew</a>:</p>
<pre class="terminal scrollx"><code>brew install gnu-sed</code></pre>
<p>If you want to make <code>gnu-sed</code> your default <code>sed</code>, then you can just add it to your path as mentioned in <a href="https://medium.com/@bramblexu/install-gnu-sed-on-mac-os-and-set-it-as-default-7c17ef1b8f64">this</a> article.</p>
<p>The kill script: <code>kill-bluetooth.sh</code> is as follows:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash scrollx"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="va">PROC_ID</span><span class="op">=</span><span class="va">$(</span><span class="fu">ps</span> aux <span class="kw">|</span> <span class="fu">grep</span> <span class="st">&#39;bluetoothd&#39;</span> <span class="kw">|</span> <span class="fu">grep</span> <span class="at">-v</span> <span class="st">&#39;grep&#39;</span> <span class="kw">|</span> <span class="ex">/usr/local/opt/gnu-sed/libexec/gnubin/sed</span> <span class="at">-E</span> <span class="st">&#39;s/\s+/ /g&#39;</span> <span class="kw">|</span> <span class="fu">cut</span> <span class="at">-d</span><span class="st">&#39; &#39;</span> <span class="at">-f2</span><span class="va">)</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="bu">echo</span> <span class="st">&quot;bluetoothd Proc Id: </span><span class="va">$PROC_ID</span><span class="st">&quot;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="fu">sudo</span> kill <span class="at">-9</span> <span class="st">&quot;</span><span class="va">$PROC_ID</span><span class="st">&quot;</span></span></code></pre></div>
<p>These are the steps followed in the script:</p>
<ol type="1">
<li>Find any processes named “bluetoothd” (<code>ps aux | grep 'bluetoothd'</code>)</li>
<li>Unfortunately this also returns the grep we ran above. Exclude it. (<code>grep -v 'grep'</code>)</li>
<li>Any time we have more than a single space, replace it with a single space (<code>sed -E 's/\s+/ /g'</code>)</li>
<li>Split the output by spaces and get the second field which is the process id(<code>cut -d' ' -f2</code>)</li>
<li>Assign the process id to <code>PROC_ID</code></li>
<li>Write out <code>PROC_ID</code> to the terminal (<code>echo "bluetoothd Proc Id: $PROC_ID"</code>)</li>
<li>Kill the process with the process id of <code>PROC_ID</code> (<code>sudo kill -9 "$PROC_ID"</code>)</li>
</ol>
<p>I’ve explicitly specified the path to the <code>gnu-sed</code> implementation because I want to run this script through <a href="https://www.alfredapp.com/">Alfred</a>. More on that later.</p>
<p>Running the above script fixes the problem when Bluetooth fails to detect my mouse!</p>
<figure>
<img src="https://media.giphy.com/media/uJw7UcWYutgQM/giphy.gif" alt="Hooray" />
<figcaption aria-hidden="true">Hooray</figcaption>
</figure>
<h2 id="make-alfred-do-it">Make Alfred do it</h2>
<p>But what if we could make it even easier? And we can, by running it through an <a href="https://www.alfredapp.com/help/workflows/actions/run-script/">Alfred Workflow script</a>.</p>
<p>One thing we will need is to give the script administrative privileges in order to run the <code>sudo</code> command. We can do this by wrapping it in an <a href="https://developer.apple.com/library/archive/technotes/tn2065/_index.html#//apple_ref/doc/uid/DTS10003093-CH1-TNTAG1-HOW_DO_I_PASS_AN_APPLESCRIPT_VARIABLE_TO_MY_SHELL_COMMAND_">AppleScript</a>:</p>
<pre class="command scrollx"><code>do shell script &quot;/bin/bash PATH_TO_SCRIPT/kill-bluetooth.sh&quot; with administrator privileges</code></pre>
<figure>
<img src="/images/macos-loses-connection-to-bluetooth-mouse/alfred-workflow-script.png" alt="Alfred Workflow Script" />
<figcaption aria-hidden="true">Alfred Workflow Script</figcaption>
</figure>
<p>This will now prompt you for the administrator password when running the script.</p>
<p>And now you can simply define a keyword to such as “Relaunch Bluetooth” to launch your Alfred Workflow and restart your <code>bluetoothd</code> daemon.</p>
<figure>
<img src="/images/macos-loses-connection-to-bluetooth-mouse/alfred-workflow.png" alt="Alfred Workflow" />
<figcaption aria-hidden="true">Alfred Workflow</figcaption>
</figure>
<figure>
<img src="/images/macos-loses-connection-to-bluetooth-mouse/relaunch-bluetooth.png" alt="Relaunch Bluetooth" />
<figcaption aria-hidden="true">Relaunch Bluetooth</figcaption>
</figure>]]></description>
    <pubDate>Wed, 16 Nov 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-11-16-macos-loses-connection-to-bluetooth-mouse.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How To Automate Spotify Through Alfred</title>
    <link>https://blog.ssanj.net/posts/2022-10-26-how-to-automate-spotify-through-alfred.html</link>
    <description><![CDATA[<p>I recently found myself thinking it would be cool to control <a href="https://www.spotify.com/">Spotify</a> through <a href="https://www.alfredapp.com/">Alfred</a>.</p>
<figure>
<img src="https://media.giphy.com/media/cnuS67F8IoVTYRvJXE/giphy.gif" alt="That’s Cool" />
<figcaption aria-hidden="true">That’s Cool</figcaption>
</figure>
<p>I use Alfred as my defacto launcher app and search tool on MacOSX. You can achieve this through Alfred <a href="https://www.alfredapp.com/workflows/">Workflows</a>. One way to do this is by using the <a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript</a> integration provided in the Workflow editor.</p>
<figure>
<img src="https://www.alfredapp.com/help/workflows/workflow-canvas.png" alt="Alfred Workflow Editor" />
<figcaption aria-hidden="true">Alfred Workflow Editor</figcaption>
</figure>
<p>See <a href="https://www.alfredapp.com/blog/tips-and-tricks/learn-to-create-workflows-with-alfreds-built-in-examples/">Learn to Create Workflows with Alfred’s Built-In Examples</a> if you’re new to creating Alfred Workflows.</p>
<p>The challenging part, for me at least, was crafting the AppleScript necessary. I’ve documented some scripts below that can be plugged into an Alfred workflow.</p>
<p>The basic outline of an AppleScript to use Spotify is of the form:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
    &lt;your Spotify functionality&gt;
  end tell
end run</code></pre>
<p>To see a full list of Spotify functionality supported through AppleScript, do the following:</p>
<ol type="1">
<li>Open the <code>Script Editor</code> application</li>
<li>Choose <code>Window</code> &gt; <code>Library</code> from the main menu or use the shortcut <code>CMD</code> + <code>ALT</code> + <code>L</code></li>
<li>If you don’t see the Spotify icon in the list, then click on the + icon at the top left of the window to <code>Add an item to Library</code>. Browse to the <code>Application</code> folder on your machine and choose the Spotify application.</li>
</ol>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/script-editor-spotify.png" alt="Spotify Library" />
<figcaption aria-hidden="true">Spotify Library</figcaption>
</figure>
<ol start="4" type="1">
<li>Double click on the Spotify Library to view the available functions:</li>
</ol>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/script-editor-spotify-suite.png" alt="Spotify Library" />
<figcaption aria-hidden="true">Spotify Library</figcaption>
</figure>
<h2 id="toggle-a-track">Toggle a Track</h2>
<p>Rather than playing and stopping Spotify, my workflow is to toggle playing or stopping a track.</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
    playpause
  end tell
end run</code></pre>
<p>As expected this would stop a playing track or play a stopped track.</p>
<h2 id="next-track">Next Track</h2>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
    next track
  end tell
end run</code></pre>
<h2 id="previous-track">Previous Track</h2>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
    previous track
  end tell
end run</code></pre>
<h2 id="playing-an-album">Playing an Album</h2>
<p>The general syntax is for the AppleScript automation is:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
        play track &quot;spotify:track:&lt;first_track_id&gt;&quot; in context &quot;spotify:album:&lt;album_id&gt;&quot;
  end tell
end run</code></pre>
<p>Copy the album link as right-clicking on the ellipses next to the album and choosing <code>Share</code> &gt; <code>Copy Album Link</code>.</p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/album_id.png" alt="Album" />
<figcaption aria-hidden="true">Album</figcaption>
</figure>
<p>The link will be of the form:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/album/41Ywc4XSD3GChkeAfzhRIR?si=htPbJS67QB6GapPw-p6W0w</code></pre>
<p>The <code>album_id</code> in the above link is <code>41Ywc4XSD3GChkeAfzhRIR</code> and as usual we can ignore everything else.</p>
<p>The <code>first_track_id</code> of the album can be found by clicking on the ellipses near the right of the first track of the album, and choosing <code>share</code> &gt; <code>Copy Song Link</code></p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/album_track_id.png" alt="First Track of Album" />
<figcaption aria-hidden="true">First Track of Album</figcaption>
</figure>
<p>The link will be of the form:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/track/7tWyfy3ySgLMbH9R0xeqzZ?si=20d78c906e7e462f</code></pre>
<p>The first_song_id is <code>7tWyfy3ySgLMbH9R0xeqzZ</code> in the above link.</p>
<p>Putting it all together we get:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
        play track &quot;spotify:track:7tWyfy3ySgLMbH9R0xeqzZ&quot; in context &quot;spotify:album:41Ywc4XSD3GChkeAfzhRIR&quot;
  end tell
end run</code></pre>
<h2 id="playing-a-playlist">Playing a Playlist</h2>
<p>The general syntax is for the AppleScript automation is:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
        play track &quot;spotify:track:&lt;first_track_id&gt;&quot; in context &quot;spotify:user:&lt;user_id&gt;:playlist:&lt;playlist_id&gt;&quot;
  end tell
end run</code></pre>
<p>The <code>user_id</code> is the owner of the playlist. More on that later.</p>
<p>It’s also important to note that you need to specify the playlist <strong>and</strong> the first track you want to start playing when you run the playlist. The track has to be played <code>in context</code> of the playlist.</p>
<figure>
<img src="https://media.giphy.com/media/720g7C1jz13wI/giphy.gif" alt="Shrug" />
<figcaption aria-hidden="true">Shrug</figcaption>
</figure>
<h3 id="spotify-playlist">Spotify Playlist</h3>
<p>For the example below I will be using the <a href="https://open.spotify.com/playlist/37i9dQZF1DWVvXA824aCbn?si=e31800da15c0430e">The Piano Bar</a> playlist is created by Spotify.</p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/public-playlist.png" alt="The Piano Bar Playlist" />
<figcaption aria-hidden="true">The Piano Bar Playlist</figcaption>
</figure>
<p>The <code>user_id</code> of any user can be retrieved by right-clicking on the user name of the owner of the playlist and selecting <code>Copy link to profile</code>. The <code>user_id</code> can be extracted from the link copied as described below.</p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/spotify-user.png" alt="Spotify User" />
<figcaption aria-hidden="true">Spotify User</figcaption>
</figure>
<p>The link is of the form:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/user/spotify?si=ba05be61cab84242</code></pre>
<p>The <code>user_id</code> from the above link is <code>spotify</code>. The <code>?si=</code> part can be ignored for our purposes.</p>
<p>The displayed user name and the actual <code>user_id</code> can be different. This is why we try to find the actual <code>user_id</code> from the profile link.</p>
<p>The <code>playlist_id</code> can be found by clicking on the ellipses near the top left of the playlist, and choosing <code>share</code> &gt; <code>copy link to playlist</code></p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/playlist_id.png" alt="Playlist Share Link" />
<figcaption aria-hidden="true">Playlist Share Link</figcaption>
</figure>
<p>The share link is:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/playlist/37i9dQZF1DWVvXA824aCbn?si=04e7f5def59f4f93</code></pre>
<p>The playlist id in the above url is <code>37i9dQZF1DWVvXA824aCbn</code>. The <code>?si=</code> part can be ignored for our purposes.</p>
<p>The <code>first_track_id</code> of the playlist can be found by clicking on the ellipses near the right of the first track of the playlist, and choosing <code>share</code> &gt; <code>Copy Song Link</code></p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/first_track_id.png" alt="Track Share Link" />
<figcaption aria-hidden="true">Track Share Link</figcaption>
</figure>
<p>The share link to the first track is:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/track/1nsMASRDWwUwlBMmOuh80d?si=eaa86c63aa504858</code></pre>
<p>The <code>first_track_id</code> in the above url is: <code>1nsMASRDWwUwlBMmOuh80d</code>. The <code>?si=</code> part can be ignored for our purposes.</p>
<p>Below is the ApplesSript code, to run the <code>The Piano Bar</code> playlist using the attributes: <code>first_track_id</code>, <code>playlist_id</code> and <code>user_id</code>, collected above:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
        play track &quot;spotify:track:1nsMASRDWwUwlBMmOuh80d&quot; in context &quot;spotify:user:spotify:playlist:37i9dQZF1DWVvXA824aCbn&quot;
  end tell
end run</code></pre>
<p>As a second example we can take my <a href="https://open.spotify.com/playlist/7znakCCH9jS9fpl0GmJYah?si=78fb6db9954a41ba">Folk</a> playlist:</p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/folk-playlist.png" alt="Folk Playlist" />
<figcaption aria-hidden="true">Folk Playlist</figcaption>
</figure>
<p>Right click on the user name and select <code>Copy link to profile</code>.</p>
<p>The link will be of the form:</p>
<pre class="terminal scrollx"><code>https://open.spotify.com/user/ssanjs?si=0c84ec2c4811471c</code></pre>
<p>In the above link, my Spotify user id is <code>ssanjs</code> and as usual we can ignore everything else.</p>
<p>Given the following attributes:</p>
<table>
<thead>
<tr class="header">
<th>Attibute</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>user</td>
<td>ssanjs</td>
</tr>
<tr class="even">
<td>playlist_id</td>
<td>7znakCCH9jS9fpl0GmJYah</td>
</tr>
<tr class="odd">
<td>first_song_id</td>
<td>5PAnntRTBk6qgst5Fw84Y8</td>
</tr>
</tbody>
</table>
<p>Our script is:</p>
<pre class="command scrollx"><code>on run
  tell application &quot;Spotify&quot;
       play track &quot;spotify:track:5PAnntRTBk6qgst5Fw84Y8&quot; in context &quot;spotify:user:ssanj:playlist:7znakCCH9jS9fpl0GmJYah&quot;
  end tell
end run</code></pre>
<h2 id="magic-happens">Magic Happens</h2>
<p>Once you’ve setup your Alfred Workflows for Spotify you can simply change to your favourite album or playlist from the search box:</p>
<figure>
<img src="/images/how-to-automate-spotify-through-alfred/alfred-spotify.gif" alt="Folk Playlist" />
<figcaption aria-hidden="true">Folk Playlist</figcaption>
</figure>
<h2 id="links">Links</h2>
<ul>
<li><a href="https://stackoverflow.com/questions/11607618/applescript-play-track-spotify">Applescript play track spotify</a></li>
<li><a href="https://gist.github.com/NoobsArePeople2/5121597">Sample AppleScript to Control Spotify</a></li>
<li><a href="https://stackoverflow.com/questions/8901556/controlling-spotify-with-applescript">Controlling Spotify with AppleScript</a></li>
</ul>]]></description>
    <pubDate>Wed, 26 Oct 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-10-26-how-to-automate-spotify-through-alfred.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Connecting To An Existing Tmux Session</title>
    <link>https://blog.ssanj.net/posts/2022-10-21-connecting-to-an-existing-tmux-session.html</link>
    <description><![CDATA[<p>One of the cool things about <a href="https://github.com/tmux/tmux">tmux</a> is that, even if you close the terminal that tmux runs in, the tmux server process keeps your session around. That also means that you can reconnect to it from another terminal.</p>
<p>If you accidentally or purposely closed a terminal session that was running tmux, you can simply launch a new terminal instance and list your existing tmux sessions with:</p>
<pre class="terminal scrollx"><code>tmux ls</code></pre>
<p>You might get a list of the sort:</p>
<pre class="command scrollx"><code>git: 2 windows (created Tue Oct  4 09:30:12 2022) (attached)
projects: 6 windows (created Tue Oct  4 09:30:44 2022) (attached)</code></pre>
<p>Now to connect to any of the existing session simply use:</p>
<pre class="terminal scrollx"><code>tmux attach -t &lt;session_name&gt;</code></pre>
<p>For example to reconnect to the <code>projects</code> tmux session use:</p>
<pre class="terminal scrollx"><code>tmux attach -t projects</code></pre>
<p>And you’re back to where you left of!</p>
<p>There’s even a way to <a href="https://timvisee.com/blog/reconnect-to-broken-tmux-session/">Reconnect to Broken tmux Session</a></p>]]></description>
    <pubDate>Fri, 21 Oct 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-10-21-connecting-to-an-existing-tmux-session.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>How To Add Different Icons To Application Instances On Macosx</title>
    <link>https://blog.ssanj.net/posts/2022-10-19-how-to-add-different-icons-to-application-instances-on-macosx.html</link>
    <description><![CDATA[<p>I run multiple <a href="https://alacritty.org/">Alacritty</a> instances for my development workflow. Each instance uses <a href="https://github.com/tmux/tmux">tmux</a> to manage multiple windows - one per project. I have one Alacritty instance that runs <a href="https://github.com/Extrawurst/gitui">GitUI</a> in full screen mode and the other instance runs the continuous compilation of each project in its own window. Oh, and they also run on separate monitors.</p>
<h2 id="monitor-configuration">Monitor Configuration</h2>
<p>I have one horizontal 32” monitor which is my primary screen and a 27” monitor turned vertical for my secondary screen.</p>
<figure>
<img src="/images/add-different-icons-to-applications-macos/monitors.png" alt="Monitors" />
<figcaption aria-hidden="true">Monitors</figcaption>
</figure>
<h3 id="primary-monitor">Primary Monitor</h3>
<p>The main monitor runs Alacritty with GitUI.</p>
<figure>
<img src="/images/add-different-icons-to-applications-macos/gitui.png" alt="Gitui" />
<figcaption aria-hidden="true">Gitui</figcaption>
</figure>
<h3 id="secondary-monitor">Secondary Monitor</h3>
<p>The secondary monitor runs another Alacritty instance with continuous compilation with the respective project’s compiler. If the project doesn’t have a compiler, the window opens to the project location from which I can run various commands.</p>
<figure>
<img src="/images/add-different-icons-to-applications-macos/compilation.png" alt="Continuous Compilation" />
<figcaption aria-hidden="true">Continuous Compilation</figcaption>
</figure>
<h3 id="the-issue">The Issue</h3>
<p>So what’s the problem that requires different application icons per instance?</p>
<p>When I run two instances of Alacritty, this is what my Application Switcher (<code>CMD</code> + <code>TAB</code>) looks like:</p>
<figure>
<img src="/images/add-different-icons-to-applications-macos/application-switcher.png" alt="Application Switcher" />
<figcaption aria-hidden="true">Application Switcher</figcaption>
</figure>
<p>It becomes very hard to distinguish between the <code>Gitgui</code> Alacritty and the <code>Project</code> Alacritty instances. More often than not I pick the wrong one and have to try and choose a second time. It’s a little annoying.</p>
<p>I can use <a href="https://support.apple.com/en-us/HT204100">Misson Control</a> to display all the windows and choose from there.</p>
<figure>
<img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/macos/Catalina/macos-catalina-mission-control-add-space-callout.jpg" alt="Mission Control - Apple.com" />
<figcaption aria-hidden="true">Mission Control - Apple.com</figcaption>
</figure>
<p>The reason I don’t want to do this is because I’ve got an old MacBook Pro and zooming into Misson Control is slow. The whole process of:</p>
<ul>
<li>Go to Mission Control</li>
<li>Choose your Alacritty Window</li>
<li>Switch to that Window</li>
</ul>
<p>takes about 2 seconds. That’s way too long to maintain any kind of flow state when coding.</p>
<h3 id="the-solution">The Solution</h3>
<ol type="1">
<li>Create a copy of the application folder</li>
</ol>
<p>For example to create an Alacritty instance for <code>Whatever</code>s I can create a copy with:</p>
<pre class="terminal scrollx"><code>cp -r /Applications/Alacritty.app /Applications/Alacritty-Whatever.app</code></pre>
<ol start="2" type="1">
<li>Open <code>Finder</code> and browse to the freshly copied application folder (<code>/Applications/Alacritty-Whatever.app</code> in the above example)</li>
</ol>
<figure>
<img src="/images/add-different-icons-to-applications-macos/whatever-app.png" alt="Alacritty-Whatever.app" />
<figcaption aria-hidden="true">Alacritty-Whatever.app</figcaption>
</figure>
<ol start="3" type="1">
<li>Open the information panel with <code>CMD</code> + <code>I</code>:</li>
</ol>
<figure>
<img src="/images/add-different-icons-to-applications-macos/icon-placeholder.png" alt="Icon Placeholder" />
<figcaption aria-hidden="true">Icon Placeholder</figcaption>
</figure>
<ol start="4" type="1">
<li>Find a new image (use <a href="https://images.google.com">Google Images</a>, <a href="https://macosicons.com/#/">macosicons</a> etc)</li>
<li>Drag the new image to the icon placeholder</li>
</ol>
<figure>
<img src="/images/add-different-icons-to-applications-macos/drag-icon.png" alt="Drag in the New Image" />
<figcaption aria-hidden="true">Drag in the New Image</figcaption>
</figure>
<figure>
<img src="/images/add-different-icons-to-applications-macos/replace-icon.png" alt="Update Icon" />
<figcaption aria-hidden="true">Update Icon</figcaption>
</figure>
<ol start="6" type="1">
<li>Launch Copied app through Spotlight or <a href="https://www.alfredapp.com/">Alfred</a></li>
</ol>
<figure>
<img src="/images/add-different-icons-to-applications-macos/launch-new-app.png" alt="Launch Copied App" />
<figcaption aria-hidden="true">Launch Copied App</figcaption>
</figure>
<ol start="7" type="1">
<li>Check the Application Switcher</li>
</ol>
<figure>
<img src="/images/add-different-icons-to-applications-macos/updated-app-switcher.png" alt="Updated Icon" />
<figcaption aria-hidden="true">Updated Icon</figcaption>
</figure>
<h3 id="final-result">Final Result</h3>
<p>I used the above steps to create custom icons for Alacritty for both my projects and GitUI instances.</p>
<figure>
<img src="/images/add-different-icons-to-applications-macos/custom-icons-workflow.png" alt="Alacritty Icons" />
<figcaption aria-hidden="true">Alacritty Icons</figcaption>
</figure>
<p>The key is to launch the Alacritty-Projects application for projects and Alacritty-GitUI application for git-related work.</p>
<h3 id="downsides">Downsides</h3>
<p>This is the simplest way to give different application instances different icons that I have found. You have to essentially create a new application (by copying an existing one) just to change an icon for a different instance. You need one copy per instance you want to customise the icon for. This seems a little crazy.</p>
<figure>
<img src="https://media.giphy.com/media/tn9LtuEXQRJqT6dWrx/giphy.gif" alt="Make it Easier" />
<figcaption aria-hidden="true">Make it Easier</figcaption>
</figure>
<p>If you know of an easier/better way to do this please drop me comment.</p>
<p>Unfortunately any time you update the original application (Alacritty in this instance) you need to recreate your copies and do the whole updating icon dance.</p>
<h3 id="scripting">Scripting</h3>
<p>This whole process is pretty easy to script, providing you can create an icns file for the image you require or already have an alternate icns file. But it is not as reliable as the steps outlined above, as sometimes icon caching issues makes it hard to refresh the new icons. See below for more details</p>
<h4 id="generating-an-icns-file">Generating an icns File</h4>
<p>There’s a program called <a href="http://www.amnoid.de/icns/makeicns.html">mkicns</a> that lets you convert images from various formats like jpg, png etc to icns files that are used for your application icons.</p>
<p>You can install it through <a href="https://brew.sh/">Homebrew</a>:</p>
<pre class="terminal scrollx"><code>brew install makeicns</code></pre>
<p>You can generate an icns file for a given image with:</p>
<pre class="terminal scrollx"><code>makeicns -in your-image_file -out your.icns</code></pre>
<p>There are a bunch <a href="http://www.amnoid.de/icns/makeicns.html">more options for makeicn</a>, so make sure to check the <code>--help</code> option for any customizations you want to make.</p>
<h4 id="icon-refresh-issues">Icon Refresh Issues</h4>
<p>Now that we have our own icns file, we can do the following:</p>
<ol type="1">
<li>Create a copy of the application folder as above</li>
<li>Copy across the custom icns file into the <code>Content/Resources</code> folder and replace the <strong>existing</strong> icns file you want to replace.</li>
</ol>
<p>For example for Alacritty, the main ics file is <code>Content/Resources/alacritty.icns</code>, so you’d do:</p>
<pre class="terminal scrollx"><code>cp your.icns /Applications/Alacritty-Whatever.app/Content/Resources/alacritty.icns</code></pre>
<p>Now if you try to launch your custom application with your new shiny icon you will notice that it has not been updated.</p>
<figure>
<img src="https://media.giphy.com/media/OPU6wzx8JrHna/giphy.gif" alt="Sad Face" />
<figcaption aria-hidden="true">Sad Face</figcaption>
</figure>
<p>In order to do that you need to help macos understand that the application has changed and you may need to some or all of the steps below:</p>
<ol type="1">
<li>touch the application folder</li>
</ol>
<pre class="terminal scrollx"><code>touch /Applications/Alacritty-Whatever.app</code></pre>
<p>If that doesn’t work you may also need to do the following:</p>
<ol start="2" type="1">
<li>Kill all the things</li>
</ol>
<pre class="terminal scrollx"><code>sudo killall Finder
sudo killall Dock</code></pre>
<p>These steps are from <a href="https://www.sethvargo.com/replace-icons-osx/">Changing Mac OS X Application Icons Programmatically</a>.</p>
<p>A full working script:</p>
<pre class="terminal scrollx"><code>#!/bin/bash

cp -r /Applications/Alacritty.app /Applications/Alacritty-Whatever.app
cp whatever.icns /Applications/Alacritty-Whatever.app/Content/Resources/alacritty.icns
touch /Applications/Alacritty-Whatever.app
sudo killall Finder &amp;&amp; sudo killall Dock</code></pre>
<p>And hopefully that should be it. But sometimes it isn’t.</p>
<figure>
<img src="https://media.giphy.com/media/22CEvbj04nLLq/giphy.gif" alt="Aaaaaaaaaaaaaaaargh" />
<figcaption aria-hidden="true">Aaaaaaaaaaaaaaaargh</figcaption>
</figure>
<p>If that doesn’t work you may need more <a href="https://osxdaily.com/2022/05/23/clear-icon-cache-mac/">drastic</a> workarounds.</p>
<p>And at end of those drastic workarounds you might revert to just using the list of steps at the top of this article.</p>
<figure>
<img src="https://media.giphy.com/media/B0vFTrb0ZGDf2/giphy.gif" alt="Small Smile" />
<figcaption aria-hidden="true">Small Smile</figcaption>
</figure>
<p>A big thank you to Apple for making all this so damn hard.</p>
<figure>
<img src="https://media.giphy.com/media/l0MYJlyOwdlT0SeU8/giphy.gif" alt="The End" />
<figcaption aria-hidden="true">The End</figcaption>
</figure>
<h3 id="links">Links</h3>
<ul>
<li><a href="https://www.sethvargo.com/replace-icons-osx/">Changing Mac OS X Application Icons Programmatically</a></li>
<li><a href="https://osxdaily.com/2022/05/23/clear-icon-cache-mac/">How to Clear Icon Cache on Mac</a></li>
<li><a href="https://stackoverflow.com/questions/646671/how-do-i-set-the-icon-for-my-applications-mac-os-x-app-bundle">How do I set the icon for my application’s Mac OS X app bundle?</a></li>
<li><a href="https://stackoverflow.com/questions/14362063/icon-for-mac-osx-bundle">Icon for Mac OSX bundle</a></li>
</ul>]]></description>
    <pubDate>Wed, 19 Oct 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-10-19-how-to-add-different-icons-to-application-instances-on-macosx.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Extending Scala Case Class With NoStackTrace Leads To Unexpected toString Behaviour</title>
    <link>https://blog.ssanj.net/posts/2022-07-20-extending-scala-case-class-with-nostacktrace-leads-to-unexpected-tostring-behaviour.html</link>
    <description><![CDATA[<p>Say you had an ADT similar to this:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">sealed</span> <span class="kw">trait</span> MyError <span class="kw">extends</span> NoStackTrace</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError1</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span></code></pre></div>
<p>This might seem weird to some. Why are we extending <code>NoStackTrace</code> ? This allows us to use the <code>MyError</code> as a return value through something like an <code>Either</code>:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> <span class="fu">sanitiseInput</span><span class="op">(</span>value<span class="op">:</span> <span class="ex">String</span><span class="op">):</span> Either<span class="op">[</span>MyError<span class="op">,</span> ValidInput<span class="op">]</span></span></code></pre></div>
<p>We can also use it as an error that can be thrown or raised into <a href="https://typelevel.org/cats-effect/">cats.IO</a>, <a href="https://fs2.io/#/">fs2.Stream</a>, <a href="https://monix.io/">Monix.eval.Task</a> or equivalent:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">object</span> IO <span class="op">{</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">def</span> raiseError<span class="op">[</span>A<span class="op">](</span>t<span class="op">:</span> <span class="ex">Throwable</span><span class="op">):</span> IO<span class="op">[</span>A<span class="op">]</span> <span class="co">//`t` has to extend Throwable if we want to use this function.</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>  <span class="co">//other functions</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>You can also read about some related ideas in <a href="https://nrinaudo.github.io/scala-best-practices/adts/errors_extend_exception.html">Make error ADTs subtypes of Exception</a>.</p>
<p>Now if we use <code>MyError</code> in a test:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">object</span> MyErrorSuite <span class="kw">extends</span> weaver<span class="op">.</span>FunSuite <span class="op">{</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="kw">sealed</span> <span class="kw">trait</span> MyError <span class="kw">extends</span> NoStackTrace</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError1</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>  <span class="fu">test</span><span class="op">(</span><span class="st">&quot;error message&quot;</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    expect<span class="op">.</span><span class="fu">same</span><span class="op">(</span><span class="fu">MyError1</span><span class="op">(</span><span class="st">&quot;error1&quot;</span><span class="op">),</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;error2&quot;</span><span class="op">))</span> <span class="co">//this is an error</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>the test output from <a href="https://disneystreaming.github.io/weaver-test/">Weaver-Test</a> gets truncated somewhat:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>info<span class="op">]</span> com<span class="op">.</span>example<span class="op">.</span>validation<span class="op">.</span>extra<span class="op">.</span>MyErrorSuite</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>info<span class="op">]</span> <span class="op">-</span> error message 30ms</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>info<span class="op">]</span> <span class="op">*************</span>FAILURES<span class="op">**************</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>info<span class="op">]</span> com<span class="op">.</span>example<span class="op">.</span>validation<span class="op">.</span>extra<span class="op">.</span>MyErrorSuite</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>error<span class="op">]</span> <span class="op">-</span> error message 30ms</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>error<span class="op">]</span>   Values not equal<span class="op">:</span> <span class="op">(</span>src<span class="op">/</span>test<span class="op">/</span>scala<span class="op">/</span>com<span class="op">/</span>example<span class="op">/</span>validation<span class="op">/</span>extra<span class="op">/</span>MyErrorSuite<span class="op">.</span>scala<span class="op">:</span><span class="dv">12</span><span class="op">)</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>error<span class="op">]</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="op">[</span>error<span class="op">]</span>   com<span class="op">.</span>example<span class="op">.</span>validation<span class="op">.</span>extra<span class="op">.</span>MyErrorSuite$<span class="op">[</span>MyError1<span class="op">]</span>  <span class="op">|</span>  com<span class="op">.</span>example<span class="op">.</span>validation<span class="op">.</span>extra<span class="op">.</span>MyErrorSuite$<span class="op">[</span>MyError2<span class="op">]</span></span></code></pre></div>
<p>All we get are the class names returned in the diff:</p>
<pre class="terminal scrollx"><code>com.example.validation.extra.MyErrorSuite$[MyError1]  |  com.example.validation.extra.MyErrorSuite$[MyError2]</code></pre>
<p>The diff we expected was something like:</p>
<pre class="terminal scrollx"><code> [MyError1]([error1]) | [MyError2]([error2]) //we can see that the class and error messages are different</code></pre>
<p>When you create a case class it generates a <code>toString</code> implementation of the form: <code>ClassName(field1Value, field2Value, ....)</code>.</p>
<p>So why are we loosing our <code>toString</code> implementation?</p>
<h2 id="cause">Cause</h2>
<p>Let’s try a simpler example in the REPL:</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError1</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>scala<span class="op">&gt;</span> <span class="fu">MyError1</span><span class="op">(</span><span class="st">&quot;Oh noes&quot;</span><span class="op">)</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> res35<span class="op">:</span> MyError1 <span class="op">=</span> <span class="fu">MyError1</span><span class="op">(</span>Oh noes<span class="op">)</span> <span class="co">//&quot;Oh noes&quot; is output</span></span></code></pre></div>
<p>We can see that we do get the contents of all fields of the case class written out.</p>
<p>Let’s try extending <code>NoStackTrace</code> and see if it makes a difference:</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span> NoStackTrace</span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>scala<span class="op">&gt;</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;Oh noes&quot;</span><span class="op">)</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> res36<span class="op">:</span> MyError2 <span class="op">=</span> MyError2 <span class="co">//no message output</span></span></code></pre></div>
<p>We can see that although the class name is output the contents of the <code>message</code> field has not.</p>
<p>Interesting. This seems to be the cause of our issue in the test.</p>
<p>It turns out a case class doesn’t generate a <code>toString</code> method (and other implementations such has hashCode etc) if you <strong>already</strong> have a custom implementation for that method in a super type.</p>
<p><a href="https://github.com/scala/bug/issues/1549">It’s not a bug, it’s a feature</a>.</p>
<figure>
<img src="https://media.giphy.com/media/l41YqG5h9gIWrcSBy/giphy.gif" alt="Nope" />
<figcaption aria-hidden="true">Nope</figcaption>
</figure>
<p>So where does our <code>MyError2</code> class get a custom <code>toString</code> implementation from?</p>
<p>Lets have a look at the <code>NoStackTrace</code> class, since <code>MyError2</code> extends that:</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">trait</span> NoStackTrace <span class="kw">extends</span> <span class="ex">Throwable</span> <span class="op">{</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">override</span> <span class="kw">def</span> <span class="fu">fillInStackTrace</span><span class="op">():</span> <span class="ex">Throwable</span> <span class="op">=</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>NoStackTrace<span class="op">.</span>noSuppression<span class="op">)</span> <span class="kw">super</span><span class="op">.</span><span class="fu">fillInStackTrace</span><span class="op">()</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span> <span class="kw">this</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>  <span class="op">...</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>No <code>toString</code> implementation here. Let’s follow the inheritance trail to <code>java.lang.Throwable</code>. Here, we see that it <a href="https://github.com/EricChows/JDK-1.8-sourcecode/blob/d34a693ffa76fdbb0fea022b5bb7bfbd2c6df0bd/java/lang/Throwable.java#L390">does</a> have a custom <code>toString</code> implementation:</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode java scrollx"><code class="sourceCode java"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">toString</span><span class="op">()</span> <span class="op">{</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> s <span class="op">=</span> <span class="fu">getClass</span><span class="op">().</span><span class="fu">getName</span><span class="op">();</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> message <span class="op">=</span> <span class="fu">getLocalizedMessage</span><span class="op">();</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="op">(</span>message <span class="op">!=</span> <span class="kw">null</span><span class="op">)</span> <span class="op">?</span> <span class="op">(</span>s <span class="op">+</span> <span class="st">&quot;: &quot;</span> <span class="op">+</span> message<span class="op">)</span> <span class="op">:</span> s<span class="op">;</span></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>From the above implementation we can deduce that for <code>MyError2</code> the <code>getLocalizedMessage</code> method returns <code>null</code> because we only get back the class name <code>s</code> as output: (<code>MyError2</code>) as opposed to: <code>MyError2: message</code>.</p>
<p>Let’s follow along to <code>getLocalizedMessage</code> to see how <code>message</code> is calculated:</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode java scrollx"><code class="sourceCode java"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getLocalizedMessage</span><span class="op">()</span> <span class="op">{</span></span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="fu">getMessage</span><span class="op">();</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>and also to <code>getMessage</code>:</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode java scrollx"><code class="sourceCode java"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getMessage</span><span class="op">()</span> <span class="op">{</span></span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> detailMessage<span class="op">;</span></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>The <code>detailMessage</code> field is set through the many of the constructor methods for <code>Throwable</code>:</p>
<div class="sourceCode" id="cb14"><pre class="sourceCode java scrollx"><code class="sourceCode java"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">Throwable</span><span class="op">(</span><span class="bu">String</span> message<span class="op">)</span> <span class="op">{</span></span>
<span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a>    <span class="fu">fillInStackTrace</span><span class="op">();</span></span>
<span id="cb14-3"><a href="#cb14-3" aria-hidden="true" tabindex="-1"></a>    detailMessage <span class="op">=</span> message<span class="op">;</span> <span class="co">//set</span></span>
<span id="cb14-4"><a href="#cb14-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb14-5"><a href="#cb14-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-6"><a href="#cb14-6" aria-hidden="true" tabindex="-1"></a><span class="co">//or</span></span>
<span id="cb14-7"><a href="#cb14-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-8"><a href="#cb14-8" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">Throwable</span><span class="op">(</span><span class="bu">String</span> message<span class="op">,</span> <span class="bu">Throwable</span> cause<span class="op">)</span> <span class="op">{</span></span>
<span id="cb14-9"><a href="#cb14-9" aria-hidden="true" tabindex="-1"></a>    <span class="fu">fillInStackTrace</span><span class="op">();</span></span>
<span id="cb14-10"><a href="#cb14-10" aria-hidden="true" tabindex="-1"></a>    detailMessage <span class="op">=</span> message<span class="op">;</span> <span class="co">//set</span></span>
<span id="cb14-11"><a href="#cb14-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">this</span><span class="op">.</span><span class="fu">cause</span> <span class="op">=</span> cause<span class="op">;</span></span>
<span id="cb14-12"><a href="#cb14-12" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb14-13"><a href="#cb14-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-14"><a href="#cb14-14" aria-hidden="true" tabindex="-1"></a><span class="co">//or</span></span>
<span id="cb14-15"><a href="#cb14-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-16"><a href="#cb14-16" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">Throwable</span><span class="op">(</span><span class="bu">Throwable</span> cause<span class="op">)</span> <span class="op">{</span></span>
<span id="cb14-17"><a href="#cb14-17" aria-hidden="true" tabindex="-1"></a>    <span class="fu">fillInStackTrace</span><span class="op">();</span></span>
<span id="cb14-18"><a href="#cb14-18" aria-hidden="true" tabindex="-1"></a>    detailMessage <span class="op">=</span> <span class="op">(</span>cause<span class="op">==</span><span class="kw">null</span> <span class="op">?</span> <span class="kw">null</span> <span class="op">:</span> cause<span class="op">.</span><span class="fu">toString</span><span class="op">());</span>  <span class="co">//set</span></span>
<span id="cb14-19"><a href="#cb14-19" aria-hidden="true" tabindex="-1"></a>    <span class="kw">this</span><span class="op">.</span><span class="fu">cause</span> <span class="op">=</span> cause<span class="op">;</span></span>
<span id="cb14-20"><a href="#cb14-20" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb14-21"><a href="#cb14-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-22"><a href="#cb14-22" aria-hidden="true" tabindex="-1"></a><span class="co">//or</span></span>
<span id="cb14-23"><a href="#cb14-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-24"><a href="#cb14-24" aria-hidden="true" tabindex="-1"></a><span class="kw">protected</span> <span class="bu">Throwable</span><span class="op">(</span><span class="bu">String</span> message<span class="op">,</span> <span class="bu">Throwable</span> cause<span class="op">,</span></span>
<span id="cb14-25"><a href="#cb14-25" aria-hidden="true" tabindex="-1"></a>                    <span class="dt">boolean</span> enableSuppression<span class="op">,</span></span>
<span id="cb14-26"><a href="#cb14-26" aria-hidden="true" tabindex="-1"></a>                    <span class="dt">boolean</span> writableStackTrace<span class="op">)</span> <span class="op">{</span></span>
<span id="cb14-27"><a href="#cb14-27" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>writableStackTrace<span class="op">)</span> <span class="op">{</span></span>
<span id="cb14-28"><a href="#cb14-28" aria-hidden="true" tabindex="-1"></a>        <span class="fu">fillInStackTrace</span><span class="op">();</span></span>
<span id="cb14-29"><a href="#cb14-29" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span>
<span id="cb14-30"><a href="#cb14-30" aria-hidden="true" tabindex="-1"></a>        stackTrace <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb14-31"><a href="#cb14-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb14-32"><a href="#cb14-32" aria-hidden="true" tabindex="-1"></a>    detailMessage <span class="op">=</span> message<span class="op">;</span>  <span class="co">//set</span></span>
<span id="cb14-33"><a href="#cb14-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">this</span><span class="op">.</span><span class="fu">cause</span> <span class="op">=</span> cause<span class="op">;</span></span>
<span id="cb14-34"><a href="#cb14-34" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(!</span>enableSuppression<span class="op">)</span></span>
<span id="cb14-35"><a href="#cb14-35" aria-hidden="true" tabindex="-1"></a>        suppressedExceptions <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb14-36"><a href="#cb14-36" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>Since we have a field named <code>message</code> and not <code>detailMessage</code>, we don’t really override the value used by <code>Throwable</code> to generate its <code>toString</code> implementation.</p>
<h2 id="workarounds">Workarounds</h2>
<p>If we renamed our <code>message</code> field in <code>MyError2</code> to <code>detailMessage</code> we should be able to get our <code>toString</code> implementation working:</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a><span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>detailMessage<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span> NoStackTrace</span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a>scala<span class="op">&gt;</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;Oh noes&quot;</span><span class="op">)</span></span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> res37<span class="op">:</span> MyError2 <span class="op">=</span> MyError2 <span class="co">//Doesn&#39;t work</span></span></code></pre></div>
<p>Wow! That didn’t work either. Why though?</p>
<p>If we look at the definition of the <code>detailMessage</code> field on <code>java.lang.Throwable</code> we see that it’s <strong>private</strong>:</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode java scrollx"><code class="sourceCode java"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="bu">String</span> detailMessage<span class="op">;</span></span></code></pre></div>
<p>This means we can’t override it from a sub class. Boo!</p>
<p>From our previous investigation we can see that all we need to do is override either <code>getLocalizedMessage</code> or <code>getMessage</code> or <code>toString</code> which are all <strong>public</strong>:</p>
<pre><code>public String toString() {
    String s = getClass().getName();
    String message = getLocalizedMessage(); //message calculated from here
    return (message != null) ? (s + &quot;: &quot; + message) : s;
}


public String getLocalizedMessage() {
    return getMessage(); //message content retrieved from here
}


public String getMessage() {
    return detailMessage; //message content
}</code></pre>
<h3 id="override-getmessage-or-getlocalizedmessage">Override getMessage or getLocalizedMessage</h3>
<p>By overriding <code>getMessage</code> or <code>getLocalizedMessage</code> in our case class, we can get some form of <code>toString</code>-ery happening. While this is not ideal, it “works”.</p>
<div class="sourceCode" id="cb18"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a><span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span><span class="kw">override</span> <span class="kw">val</span> getMessage<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span> NoStackTrace</span>
<span id="cb18-4"><a href="#cb18-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb18-5"><a href="#cb18-5" aria-hidden="true" tabindex="-1"></a>scala<span class="op">&gt;</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;Oh noes&quot;</span><span class="op">)</span></span>
<span id="cb18-6"><a href="#cb18-6" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> res38<span class="op">:</span> MyError2 <span class="op">=</span> MyError2<span class="op">:</span> Oh noes <span class="co">//We did it!</span></span></code></pre></div>
<h3 id="override-tostring">Override toString</h3>
<p>If you want a more case classy <code>toString</code> implementation, you’re going to have to do it yourself:</p>
<div class="sourceCode" id="cb19"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb19-1"><a href="#cb19-1" aria-hidden="true" tabindex="-1"></a><span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span> NoStackTrace <span class="op">{</span></span>
<span id="cb19-2"><a href="#cb19-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">override</span> <span class="kw">def</span> toString<span class="op">:</span> <span class="ex">String</span> <span class="op">=</span> <span class="ss">s&quot;</span><span class="st">MyError2(</span><span class="ss">$message</span><span class="st">)</span><span class="ss">&quot;</span></span>
<span id="cb19-3"><a href="#cb19-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb19-4"><a href="#cb19-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb19-5"><a href="#cb19-5" aria-hidden="true" tabindex="-1"></a>scala<span class="op">&gt;</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;Oh noes&quot;</span><span class="op">)</span></span>
<span id="cb19-6"><a href="#cb19-6" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> res39<span class="op">:</span> MyError2 <span class="op">=</span> <span class="fu">MyError2</span><span class="op">(</span>Oh noes<span class="op">)</span> <span class="co">//we have case classiness</span></span></code></pre></div>
<p>Now we can get our test to fail with a better error message:</p>
<div class="sourceCode" id="cb20"><pre class="sourceCode scala scrollx"><code class="sourceCode scala"><span id="cb20-1"><a href="#cb20-1" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> scala<span class="op">.</span>util<span class="op">.</span>control<span class="op">.</span>NoStackTrace</span>
<span id="cb20-2"><a href="#cb20-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb20-3"><a href="#cb20-3" aria-hidden="true" tabindex="-1"></a><span class="kw">object</span> MyErrorSuiteTake2 <span class="kw">extends</span> weaver<span class="op">.</span>FunSuite <span class="op">{</span></span>
<span id="cb20-4"><a href="#cb20-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb20-5"><a href="#cb20-5" aria-hidden="true" tabindex="-1"></a><span class="kw">sealed</span> <span class="kw">trait</span> MyError <span class="kw">extends</span> NoStackTrace <span class="op">{</span></span>
<span id="cb20-6"><a href="#cb20-6" aria-hidden="true" tabindex="-1"></a>  <span class="kw">val</span> message<span class="op">:</span> <span class="ex">String</span></span>
<span id="cb20-7"><a href="#cb20-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb20-8"><a href="#cb20-8" aria-hidden="true" tabindex="-1"></a>  <span class="kw">override</span> <span class="kw">def</span> toString<span class="op">:</span> <span class="ex">String</span> <span class="op">=</span> <span class="op">{</span></span>
<span id="cb20-9"><a href="#cb20-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> className <span class="op">=</span> getClass<span class="op">.</span>getName</span>
<span id="cb20-10"><a href="#cb20-10" aria-hidden="true" tabindex="-1"></a>    <span class="ss">s&quot;$className</span><span class="st">(</span><span class="ss">$message</span><span class="st">)</span><span class="ss">&quot;</span></span>
<span id="cb20-11"><a href="#cb20-11" aria-hidden="true" tabindex="-1"></a>   <span class="op">}</span></span>
<span id="cb20-12"><a href="#cb20-12" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb20-13"><a href="#cb20-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb20-14"><a href="#cb20-14" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError1</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span>
<span id="cb20-15"><a href="#cb20-15" aria-hidden="true" tabindex="-1"></a><span class="kw">final</span> <span class="cf">case</span> <span class="kw">class</span> <span class="fu">MyError2</span><span class="op">(</span>message<span class="op">:</span> <span class="ex">String</span><span class="op">)</span> <span class="kw">extends</span>  MyError</span>
<span id="cb20-16"><a href="#cb20-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb20-17"><a href="#cb20-17" aria-hidden="true" tabindex="-1"></a>  <span class="fu">test</span><span class="op">(</span><span class="st">&quot;error message&quot;</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb20-18"><a href="#cb20-18" aria-hidden="true" tabindex="-1"></a>    expect<span class="op">.</span><span class="fu">same</span><span class="op">(</span><span class="fu">MyError1</span><span class="op">(</span><span class="st">&quot;error1&quot;</span><span class="op">),</span> <span class="fu">MyError2</span><span class="op">(</span><span class="st">&quot;error2&quot;</span><span class="op">))</span></span>
<span id="cb20-19"><a href="#cb20-19" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb20-20"><a href="#cb20-20" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>Which results in:</p>
<pre class="terminal scrollx"><code>info] com.example.validation.extra.MyErrorSuiteTake2
[error] - error message 38ms
[error]   Values not equal: (src/test/scala/com/example/validation/extra/MyErrorSuiteTake2.scala:20)
[error]
[error]   com.example.validation.extra.MyErrorSuiteTake2$[MyError1]([error1])  |  com.example.validation.extra.MyErrorSuiteTake2$[MyError2]([error2])
</code></pre>
<p>All this seems a bit tedious… as does extending the <code>Exception</code> hierarchy. If you do decide to go this route, hopefully this will help you stave off at least one of the issues with extending <code>java.lang.Throwable</code> and friends.</p>]]></description>
    <pubDate>Wed, 20 Jul 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-07-20-extending-scala-case-class-with-nostacktrace-leads-to-unexpected-tostring-behaviour.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>
<item>
    <title>Naming a tmux Session</title>
    <link>https://blog.ssanj.net/posts/2022-07-16-naming-a-tmux-session.html</link>
    <description><![CDATA[<p>When you start a new <a href="https://github.com/tmux/tmux">tmux</a> session with:</p>
<pre class="terminal scrollx"><code>tmux</code></pre>
<p>If you list your tmux session with:</p>
<pre class="terminal scrollx"><code>tmux ls</code></pre>
<p>You’ll see a default name used for your sessions:</p>
<pre class="terminal scrollx"><code>2: 1 windows (created Sat Jul 16 15:59:49 2022) (attached)</code></pre>
<p>In the above the name of the tmux session is <strong>2</strong>. Remembering these numbers can become unwheldly when you have many tmux sessions running, each with a different purpose.</p>
<p>The easier way to create a new session is by giving it a name of your choosing:</p>
<pre class="terminal scrollx"><code>tmux new -s your_cool_name_here</code></pre>
<p>And now when you list your tmux sessions, you can easily find the session you just created:</p>
<pre class="terminal scrollx"><code>your_cool_name_here: 1 windows (created Sat Jul 16 16:03:46 2022) (attached)</code></pre>]]></description>
    <pubDate>Sat, 16 Jul 2022 00:00:00 UT</pubDate>
    <guid>https://blog.ssanj.net/posts/2022-07-16-naming-a-tmux-session.html</guid>
    <dc:creator>sanjiv sahayam</dc:creator>
</item>

    </channel>
</rss>
